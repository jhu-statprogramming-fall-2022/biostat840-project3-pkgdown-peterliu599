[{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/articles/vignettes.html","id":"question","dir":"Articles","previous_headings":"","what":"Question","title":"Vignettes","text":"-Among password types, category easiest cracked? -strength password related time crack ?","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/articles/vignettes.html","id":"data-link-with-dictionary","dir":"Articles","previous_headings":"","what":"Data link with dictionary","title":"Vignettes","text":"data set variety commonly used passwords sourced Information Beautiful. data dictionary can found https://github.com/rfordatascience/tidytuesday/tree/master/data/2020/2020-01-14.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/articles/vignettes.html","id":"data-loading-wrangling","dir":"Articles","previous_headings":"","what":"Data loading & wrangling","title":"Vignettes","text":"","code":"main_dir <- here() sub_dir <- \"data\" if (file.exists(sub_dir)){       # specifying the working directory       setwd(file.path(main_dir, sub_dir)) } else {       # create a new sub directory inside       # the main path       dir.create(file.path(main_dir, sub_dir))                # specifying the working directory       setwd(file.path(main_dir, sub_dir)) } if(!file.exists(here(\"data\",\"passwords.RDS\"))){   passwords <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-14/passwords.csv')   # save the files to RDS objects   saveRDS(passwords, file = \"passwords.RDS\") } passwords <- readRDS(paste0(file.path(main_dir, sub_dir), \"/passwords.RDS\")) x.1 <- passwords %>% drop_na() x.2 <- x.1 %>% filter(offline_crack_sec < 0.5) # x.2$category <- as.factor(x.2$category) ggplot(x.2) + geom_boxplot(aes(y = offline_crack_sec, x = category)) +    labs(title = \"Offline cracking time within different category\",        subtitle = \"Nerdy pop, sport, and password related codes are slightly harder to crack\",        caption = \"Plot made by Bolun Liu\") +    xlab(\"Category\") + ylab(\"Time\") + theme(axis.text.x = element_text(angle = 45, hjust=1)) x.3 <- x.1 %>% filter(str_detect(time_unit, \"day\"))  names <- rep(\"simple\", length(which(x.3$category == \"simple-alphanumeric\"))) set_names(x.3$category[which(x.3$category == \"simple-alphanumeric\")], names) ##                simple                simple                simple  ## \"simple-alphanumeric\" \"simple-alphanumeric\" \"simple-alphanumeric\"  ##                simple                simple                simple  ## \"simple-alphanumeric\" \"simple-alphanumeric\" \"simple-alphanumeric\"  ##                simple                simple                simple  ## \"simple-alphanumeric\" \"simple-alphanumeric\" \"simple-alphanumeric\"  ##                simple                simple                simple  ## \"simple-alphanumeric\" \"simple-alphanumeric\" \"simple-alphanumeric\" ggplot(x.3) + geom_point(aes(y = strength, x = offline_crack_sec)) +      labs(title = \"Password strength against offline cracking time\",        subtitle = \"Their mannual set password strength doesn't seem to be a good criteria. \\nI am quite surprised by this result.\\n This suggests the strength here might not be a base for accurate analysis.\",        caption = \"Plot made by Bolun Liu\") +    xlab(\"Time\") + ylab(\"Strength\") x.4 <- x.1 %>% split(x.1$category) x.4 %>% map(.f = ~mean(.x$rank)) ## $animal ## [1] 257.5517 ##  ## $`cool-macho` ## [1] 259.7975 ##  ## $fluffy ## [1] 240.1136 ##  ## $food ## [1] 239.4545 ##  ## $name ## [1] 264.6557 ##  ## $`nerdy-pop` ## [1] 272.1667 ##  ## $`password-related` ## [1] 169.6 ##  ## $`rebellious-rude` ## [1] 215.0909 ##  ## $`simple-alphanumeric` ## [1] 231.4098 ##  ## $sport ## [1] 227.973 x.5 <- x.3 %>% select(password, category, rank, strength)  ggplot(data = x.5) + geom_histogram(aes(x = rank)) + facet_grid(rows = vars(category)) +     labs(title = \"Histograms of password ranks by category\",        subtitle = \"Although password-related and rude passwords have higher ranks on average,\\nanimal-related and simple-alphanumeric passwords appears to be most common individually.\",        caption = \"Plot made by Bolun Liu\") +    xlab(\"Rank statistics\") + ylab(\"Frequency\") ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. n<-rsampcalc(N=500, e=1, ci=95, p=0.5, over=0) n ## [1] 476 strata <- ssampcalc(df=x.1, n=n, strata=category, over=0) strata ## # A tibble: 10 × 4 ##    category               Nh wt[,1] nh[,1] ##    <chr>               <int>  <dbl>  <dbl> ##  1 animal                 29  0.058     28 ##  2 cool-macho             79  0.158     75 ##  3 fluffy                 44  0.088     42 ##  4 food                   11  0.022     10 ##  5 name                  183  0.366    174 ##  6 nerdy-pop              30  0.06      29 ##  7 password-related       15  0.03      14 ##  8 rebellious-rude        11  0.022     10 ##  9 simple-alphanumeric    61  0.122     58 ## 10 sport                  37  0.074     35"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/articles/vignettes.html","id":"result","dir":"Articles","previous_headings":"","what":"Result","title":"Vignettes","text":"average rank statistics, category password-related (“password”) rebellious-rude (“biteme”) type passwords common. Individually, simple-alphanumeric code “1111” “aaaa” popular. Among category, nerdy-pop, sport, password-related codes relatively harder crack, different can negligble. Moreover, strength data set related cracking time, indicating good candidate data analysis. sample data set can recover sample mean marginal error 1 95% CI, effective sample size 476, calculated rsampcalc(). sample within different strata (, catagory) sample sizes, ssampcalc() gives reasonable sampling scheme.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/articles/vignettes.html","id":"function-used","dir":"Articles","previous_headings":"","what":"function used","title":"Vignettes","text":"tidyr: drop_na(), filter(), select(), as_tibble(), str_detect(), as_factor() purrr: map(), set_name() ggplot: geom_point(), geom_histogram(), geom_boxplot() sampler: rsampcalc(), ssampcalc()","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Baldassaro. Maintainer.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Baldassaro M (2022). sampler: Sample Design, Drawing & Data Analysis Using Data Frames. https://github.com/mbaldassaro/sampler, https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/.","code":"@Manual{,   title = {sampler: Sample Design, Drawing & Data Analysis Using Data Frames},   author = {Michael Baldassaro},   year = {2022},   note = {https://github.com/mbaldassaro/sampler, https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/}, }"},{"path":[]},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"original-author","dir":"","previous_headings":"","what":"Original author","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"Michael Baldassaro, Mara Averick","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"original-github-link","dir":"","previous_headings":"","what":"Original github link","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"https://github.com/mbaldassaro/sampler","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"practice-website-link","dir":"","previous_headings":"","what":"Practice website link","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"customization","dir":"","previous_headings":"","what":"Customization","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"use bootswatch lux use theme breeze-light change background color change font color change font base, heading, code.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"r-package-for-sample-design-drawing--data-analysis-using-data-frames","dir":"","previous_headings":"","what":"R Package for Sample Design, Drawing, & Data Analysis Using Data Frames","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"sampler R package designed enable data scientists design, draw, analyze simple complex samples using data frames. enables load machine-readable files (e.g. .csv, .tsv, etc.) R containing sampling frame collected data, store objects, perform sampling techniques analysis using clear concise methods. Specifically, data scientist can use sampler R package : determine simple random sample sizes, stratified sample sizes, complex stratified sample sizes using secondary variable population draw simple random samples stratified random samples sampling data frames determine observations missing random sample, missing strata, duplicated within dataset perform data analysis, including proportions, margins error upper lower bounds simple, stratified cluster sample designs sampler R package builds bridge survey administrators free open-source R environment --low cost Open Data Kit (ODK)-based toolkits Ona NEMO. sampler package available via CRAN GitHub use R R Studio.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"to-install-in-r-from-cran","dir":"","previous_headings":"","what":"To install in R from CRAN:","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"","code":"install.packages(\"sampler\") library(sampler)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"to-install-in-r-from-github","dir":"","previous_headings":"","what":"To install in R from GitHub:","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"sampler R package includes following datasets: albania: dataset containing 2017 Albania election results polling station published Central Election Commission opened Coalition Domestic Observers & Democracy International opening: dataset containing 2017 Albania election observation findings polling station opening process Coalition Domestic Observers (CDO) CDO conducted statistically-based observation (SBO) exercise, deploying observers random sample polling stations 25 June 2017 Albanian elections. subset observation data collected CDO observers includes data used perform statistical analysis Full documentation datasets functions can found RDocumentation","code":"install.packages(\"devtools\"); library(devtools) devtools::install_github(\"mbaldassaro/sampler\"); library(sampler)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"determine-random-sample-size","dir":"","previous_headings":"","what":"Determine random sample size","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * N population universe (e.g. 10000, nrow(df)) * e tolerable margin error (integer float, e.g. 5, 2.5) * ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) * p (optional) anticipated response distribution (defaults 0.5; takes value 0 1 input) * (optional) desired oversampling proportion (defaults 0; takes value 0 1 input) Returns appropriate sample size (rounded nearest integer) Example: Source: Sampling Design & Analysis, S. Lohr, 1999, equation 2.17","code":"rsampcalc(N, e, ci=95,p=0.5, over=0) rsampcalc(N=5361, e=3, ci=95, p=0.5, over=0.1)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"draw-a-simple-random-sample","dir":"","previous_headings":"","what":"Draw a simple random sample","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing full sampling data frame * n sample size (integer object containing sample size) * (optional) desired oversampling proportion (defaults 0; takes value 0 1 input) * rep (optional) boolean sample repalcement (TRUE) without replacement (defaults FALSE) Returns simple random sample size n Example: ","code":"rsamp(df, n, over=0, rep=FALSE) rsamp(albania, n=360, over=0.1, rep=FALSE) size <- rsampcalc(nrow(albania), 3, 95, 0.5) rsamp(albania, size)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"determine-sample-size-by-strata-using-proportional-allocation","dir":"","previous_headings":"","what":"Determine sample size by strata using proportional allocation","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing sampling data frame * n sample size (integer) object containing sample size * strata variable sampling data frame stratify * (optional) desired oversampling proportion (defaults 0; takes value 0 1 input) Returns proportional sample size per strata (rounded nearest integer) Example: Source: Sampling Design & Analysis, S. Lohr, 1999, 4.4","code":"ssampcalc(df, n, strata, over=0) ssampcalc(df=albania, n=544, strata=qarku, over=0.05) size <- rsampcalc(nrow(albania), 3, 95, 0.5) ssampcalc(albania, size, qarku)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"draw-stratified-sample-proportional-allocation","dir":"","previous_headings":"","what":"Draw stratified sample (proportional allocation)","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing full sampling data frame * n sample size (integer, object containing sample size) * strata variable sampling data frame stratify (e.g. region) * (optional) desired oversampling proportion (defaults 0; takes value 0 1 input) Returns stratified sample using proportional allocation without replacement Example: ","code":"ssamp(df, n, strata, over=1) ssamp(df=albania, n=360, strata=qarku, over=0.1) size <- rsampcalc(nrow(albania), 3, 95, 0.5) ssamp(albania, size, qarku)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"determine-sample-size-by-strata-using-sub-units","dir":"","previous_headings":"","what":"Determine sample size by strata using sub-units","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing full sampling data frame * n sample size (integer) object containing sample size * strata variable sampling data frame stratify * unit variable sampling data frame containing sub-units (e.g. population) * (optional) desired oversampling proportion (defaults 0; takes value 0 1 input) Returns sample size per strata based sub-units (rounded nearest integer) Example Source: Sampling Design & Analysis, S. Lohr, 1999, 4.4","code":"psampcalc(df, n, strata, unit, over=0) psampcalc(df=albania, n=544, strata=qarku, unit=zgjedhes, over=0.1)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"calculate-proportion-and-margin-of-error-simple-random-sample","dir":"","previous_headings":"","what":"Calculate proportion and margin of error (simple random sample)","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing data frame perform analysis (e.g. data) * col_name variable data frame want calculate proportion margin error * ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) * na (optional) value want filter exclude (defaults include everything) * N (optional) population universe (e.g. 10000, nrow(df)); N value passed argument, margin error calculated using fpc Returns table responses (n), proportions (midpoint), margins error, lower upper bounds factor given variable Example: Source: Sampling Design & Analysis, S. Lohr, 1999, Equation 2.15","code":"rpro(df, col_name, ci=95, na=\"\", N=0) rpro(df=opening, col_name=openTime, ci=95, na=\"n/a\", N=5361)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"calculate-proportion-and-margin-of-error-stratified-sample","dir":"","previous_headings":"","what":"Calculate proportion and margin of error (stratified sample)","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * fulldf object containing original data frame used draw sample * sampdf object containing data frame perform analysis * strata variable data frames stratify * col_name variable data frame want calculate proportion margin error * ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) * na (optional) value want filter exclude (defaults include everything) Returns table responses (n), proportions (midpoint), margins error, lower upper bounds factor given variable stratified sample Example: Source: Sampling Design & Analysis, S. Lohr, 1999, 4.6 & 4.7","code":"spro(fulldf, sampdf, strata, col_name, ci=95, na=\"\") spro(fulldf=albania, sampdf=opening, strata=qarku, col_name=openTime, ci=95, na=\"n/a\")"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"calculate-proportion-and-margin-of-error-unequal-sized-cluster-sample","dir":"","previous_headings":"","what":"Calculate proportion and margin of error (unequal-sized cluster sample)","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing data frame perform analysis * numerator variable data frame want calculate proportion margin error * denominator variable data frame containing population unequal cluster sizes * ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) * na (optional) value want filter exclude (defaults include everything) * N (optional) population universe (e.g. 10000, nrow(df)); N value passed argument, margin error calculated using fpc Returns table responses (n), proportions (midpoint), margins error, lower upper bounds factor given variable unequal-sized cluster sample Example: Source 1: Survey Sampling, L. Kish, 1965, Equation 6.3.4 Source 2: Sampling Techniques, W.G. Cochran, 1977, Equation 3.34","code":"cpro(df, numerator, denominator, ci=95, na=\"\", N=0) alresults <- ssamp(albania, 890, qarku) cpro(df=alresults, numerator=totalVoters, denominator=zgjedhes, ci=95) cpro(df=alresults, numerator=pd, denominator=validVotes, ci=95, N=5361)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"identify-missing-points-between-sample-and-collected-data","dir":"","previous_headings":"","what":"Identify missing points between sample and collected data","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * sampdf object containing data frame sample points * colldf object containing data frame collected data * col_name common variable (.e. key) data frames check missing points Returns table sample points missing collected data Example:","code":"rmissing(sampdf, colldf, col_name) alsample <- rsamp(df=albania, 544) alreceived <- rsamp(df=alsample, 390) rmissing(sampdf=alsample, colldf=alreceived, col_name=qvKod)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"identify-number-of-missing-points-by-strata-between-sample-and-collected-data","dir":"","previous_headings":"","what":"Identify number of missing points by strata between sample and collected data","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * sampdf object containing data frame sample points * colldf object containing data frame collected data * strata variable data frames stratify * col_name common variable (.e. key) data frames check missing points Returns table number sample points strata missing collected data Example:","code":"smissing(sampdf, colldf, strata, col_name) alsample <- rsamp(df=albania, 544) alreceived <- rsamp(df=alsample, 390) smissing(sampdf=alsample, colldf=alreceived, strata=qarku, col_name=qvKod)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"identify-duplicate-values-within-collected-data","dir":"","previous_headings":"","what":"Identify duplicate values within collected data","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing data frame collected data * col_name variable within data frame filter duplicate values Returns table duplicate values within collected data Example:","code":"dupe(df, col_name) aldupe <- rsamp(df=albania, n=390, rep=TRUE) dupe(df=aldupe, col_name=qvKod)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"remove-observations-based-on-duplicate-values-within-collected-data","dir":"","previous_headings":"","what":"Remove observations based on duplicate values within collected data","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing data frame collected data * col_name variable within data frame filter duplicate values Returns table observations based unique values within collected data Example:","code":"dedupe(df, col_name) aldupe <- rsamp(df=albania, n=390, rep=TRUE) dedupe(df=aldupe, col_name=qvKod)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/albania.html","id":null,"dir":"Reference","previous_headings":"","what":"Albania 2017 Election Results by Polling Station — albania","title":"Albania 2017 Election Results by Polling Station — albania","text":"Data set containing 2017 Albania election results polling station published Central Election Commission opened Coalition Domestic Observers & Democracy International.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/albania.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Albania 2017 Election Results by Polling Station — albania","text":"","code":"albania"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/albania.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Albania 2017 Election Results by Polling Station — albania","text":"data frame 5362 rows 45 variables qarku district, 12 total Q_ID geocode district bashkia municipality, 61 total BAS_ID geocode municipality zaz election area zone, 90 total njesiaAdministrative village, 373 total COM_ID geocode village qvKod polling station identifier zgjedhes number total registered voters meshkuj number male registered voters femra number female registered voters totalSeats number seats contested district vendndodhja name polling center containing polling stations ambienti type polling center, 5 total totalVoters number total registered voters cast ballots femVoters number female registered voters cast ballots maleVoters number male registered voters cast ballots unusedBallots number ballots used damagedBallots number ballots damaged ballotsCast number total ballots cast invalidVotes number ballots cast invalidated validVotes number valid ballots cast lsi number ballots cast LSI ps number ballots cast PS pkd number ballots cast PKD sfida number ballots cast SFIDA pr number ballots cast PR pd number ballots cast PD pbdksh number ballots cast PBDKSH adk number ballots cast ADK psd number ballots cast PSD ad number ballots cast AD frd number ballots cast FRD pds number ballots cast PDS pdiu number ballots cast PDIU aak number ballots cast AAK mega number ballots cast MEGA pksh number ballots cast PKSH apd number ballots cast APD libra number ballots cast LIBRA psSeats number seats won PS pdSeats number seats won PD lsiSeats number seats won LSI pdiuSeats number seats won PDIU psdSeats number seats won PSD","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/albania.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Albania 2017 Election Results by Polling Station — albania","text":"https://albaniaelectiondata.herokuapp.com/","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/cpro.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","title":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","text":"Calculate proportion margin error (unequal-sized cluster sample)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/cpro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","text":"","code":"cpro(df, numerator, denominator, ci = 95, na = \"\", N = 0)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/cpro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","text":"df object containing data frame perform analysis numerator variable data frame want calculate proportion margin error denominator variable data frame containing population sizes unequal clusters ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) na (optional) value want filter exclude (defaults include everything) N (optional) population universe (e.g. 10000, nrow(df)); N value passed argument, margin error calculated using fpc","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/cpro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","text":"Returns table responses (n), proportions, margins error, lower upper bounds factor given variable stratified sample","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/cpro.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","text":"[1] Survey Sampling, L. Kish, 1965, Equation 6.3.4 [2] Sampling Techniques, W.G. Cochran, 1977, Equation 3.34","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/cpro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","text":"","code":"alresults <- ssamp(albania, 890, qarku) cpro(df=alresults, numerator=totalVoters, denominator=zgjedhes, ci=95) #> # A tibble: 1 × 5 #>       n midpoint    me lower upper #>   <int>    <dbl> <dbl> <dbl> <dbl> #> 1   891     46.6 0.588  46.0  47.1 cpro(df=alresults, numerator=pd, denominator=validVotes, ci=95, N=5361) #> # A tibble: 1 × 5 #>       n midpoint    me lower upper #>   <int>    <dbl> <dbl> <dbl> <dbl> #> 1   891     28.7 0.734  27.9  29.4"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dedupe.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes duplicate observations within collected data — dedupe","title":"Removes duplicate observations within collected data — dedupe","text":"Removes duplicate observations within collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dedupe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes duplicate observations within collected data — dedupe","text":"","code":"dedupe(df, col_name)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dedupe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes duplicate observations within collected data — dedupe","text":"df object containing data frame collected data col_name variable within data frame filter duplicate values","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dedupe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes duplicate observations within collected data — dedupe","text":"Returns table data based unique values within collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dedupe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes duplicate observations within collected data — dedupe","text":"","code":"aldupe <- rsamp(df=albania, n=390, rep=TRUE) dedupe(df=aldupe, col_name=qvKod) #> # A tibble: 378 × 45 #> # Groups:   qvKod [378] #>    qarku    Q_ID bashkia    BAS_ID zaz    njesiaAdministr… COM_ID qvKod zgjedhes #>    <fct>   <int> <fct>       <int> <fct>  <fct>             <int> <fct>    <int> #>  1 Vlore      12 \"Himare\"      123 ZAZ 86 \"Lukove\"          12206 \"\\\"4…      547 #>  2 Korce       7 \"Pogradec\"     75 ZAZ 67 \"Pogradec\"         7405 \"\\\"3…      799 #>  3 Korce       7 \"Pogradec\"     75 ZAZ 67 \"Pogradec\"         7405 \"\\\"3…      597 #>  4 Vlore      12 \"Vlore\"       128 ZAZ 83 \"Vlore\"           12312 \"\\\"4…      753 #>  5 Berat       1 \"Kucove\"       13 ZAZ 63 \"Kucove\"           1201 \"\\\"3…      805 #>  6 Kukes       8 \"Kukes\"        83 ZAZ 11 \"Topojan\"          8213 \"\\\"0…      223 #>  7 Elbasan     4 \"Belsh\"        41 ZAZ 45 \"Belsh\"            4101 \"\\\"2…      727 #>  8 Fier        5 \"Fier \"        52 ZAZ 57 \"Cakran\"           5101 \"\\\"3…      960 #>  9 Elbasan     4 \"Elbasan\"      44 ZAZ 50 \"Elbasan\"          4104 \"\\\"2…      980 #> 10 Durres      3 \"Durres\"       31 ZAZ 22 \"Durres \"          3101 \"\\\"1…      757 #> # … with 368 more rows, and 36 more variables: meshkuj <int>, femra <int>, #> #   totalSeats <int>, vendndodhja <fct>, ambienti <fct>, totalVoters <int>, #> #   femVoters <int>, maleVoters <int>, unusedBallots <int>, #> #   damagedBallots <int>, ballotsCast <int>, invalidVotes <int>, #> #   validVotes <int>, lsi <int>, ps <int>, pkd <int>, sfida <int>, pr <int>, #> #   pd <int>, pbdksh <int>, adk <int>, psd <int>, ad <int>, frd <int>, #> #   pds <int>, pdiu <int>, aak <int>, mega <int>, pksh <int>, apd <int>, …"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dupe.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies duplicate values within collected data — dupe","title":"Identifies duplicate values within collected data — dupe","text":"Identifies duplicate values within collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dupe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies duplicate values within collected data — dupe","text":"","code":"dupe(df, col_name)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dupe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies duplicate values within collected data — dupe","text":"df object containing data frame collected data col_name variable within data frame filter duplicate values","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dupe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies duplicate values within collected data — dupe","text":"Returns table duplicate values within collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dupe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies duplicate values within collected data — dupe","text":"","code":"aldupe <- rsamp(df=albania, n=390, rep=TRUE) dupe(df=aldupe, col_name=qvKod) #> # A tibble: 18 × 2 #> # Groups:   qvKod [18] #>    qvKod           n #>    <fct>       <int> #>  1 \"\\\"0378\\\"\"      2 #>  2 \"\\\"0399\\\"\"      2 #>  3 \"\\\"0583\\\"\"      2 #>  4 \"\\\"0611\\\"\"      2 #>  5 \"\\\"17032\\\"\"     2 #>  6 \"\\\"20011\\\"\"     2 #>  7 \"\\\"2055\\\"\"      2 #>  8 \"\\\"2287\\\"\"      2 #>  9 \"\\\"2539\\\"\"      2 #> 10 \"\\\"2780\\\"\"      2 #> 11 \"\\\"2833\\\"\"      2 #> 12 \"\\\"3022\\\"\"      2 #> 13 \"\\\"36841\\\"\"     2 #> 14 \"\\\"4060\\\"\"      2 #> 15 \"\\\"4295\\\"\"      2 #> 16 \"\\\"4359\\\"\"      2 #> 17 \"\\\"4530\\\"\"      2 #> 18 \"\\\"4556\\\"\"      2"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/opening.html","id":null,"dir":"Reference","previous_headings":"","what":"Albania 2017 CDO Election Observation Data Findings on Opening Process — opening","title":"Albania 2017 CDO Election Observation Data Findings on Opening Process — opening","text":"Data set containing 2017 Albania election observation findings polling station opening process Coalition Domestic Observers (CDO) CDO conducted statistically-based observation (SBO) exercise, deploying observers random sample polling stations 25 June 2017 Albanian elections. subset observation data collected CDO observers includes data used perform statistical analysis.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/opening.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Albania 2017 CDO Election Observation Data Findings on Opening Process — opening","text":"","code":"opening"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/opening.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Albania 2017 CDO Election Observation Data Findings on Opening Process — opening","text":"data frame 524 rows 19 variables qarku district, 12 total psID polling station identifier votersList number registered voters polling station ballotPapers number ballot papers polling station pubPriv type polling station, public private openTime time polling station opening, 30 minute ranges numKommish number commissioners present polling station secrecyOpen yes-polling station enabled voters cast ballots secrecy, po jo movementOpen yes-polling station provided sufficient space vote, po jo removeMatInside yes-campaign materials removed inside polling station, po jo removeMatOutside yes-campaign materials removed outside polling station, po jo pvComplete yes-commissioners completed opening record checklist sheet, po jo boxChecked yes-commissioners checked ensure ballot box empty opening, po jo boxSealed yes-commissioners sealed ballot box prevent ballot tampering, po jo recordBox yes-commissioners recorded seal number ballot box, po jo centerMat yes-election materials available polling station, po jo blindTools yes-polling station equipped blind voters, po jo disabledTools yes--partially polling station equipped disabled voters, po jo pjeserisht overallOpen good-good-problematic-problematic overall assessment opening process, shummir,mir,meprob,shumprob","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/opening.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Albania 2017 CDO Election Observation Data Findings on Opening Process — opening","text":"https://ona.io/cdo/35080/216662","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/psampcalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines sample size by strata using sub-units — psampcalc","title":"Determines sample size by strata using sub-units — psampcalc","text":"Determines sample size strata using sub-units","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/psampcalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines sample size by strata using sub-units — psampcalc","text":"","code":"psampcalc(df, n, strata, unit, over = 0)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/psampcalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines sample size by strata using sub-units — psampcalc","text":"df object containing full sampling data frame (e.g. data) n sample size (integer) object containing sample size strata variable sampling data frame stratify (e.g. region) unit variable sampling data frame containing sub-units (e.g. population) (optional) desired oversampling proportion (defaults 0; takes value 0 1 input)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/psampcalc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines sample size by strata using sub-units — psampcalc","text":"Returns sample size per strata based sub-units (rounded nearest integer)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/psampcalc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determines sample size by strata using sub-units — psampcalc","text":"[1] Sampling Design & Analysis, S. Lohr, 1999, 4.4","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rmissing.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies missing points between sample and collected data — rmissing","title":"Identifies missing points between sample and collected data — rmissing","text":"Identifies missing points sample collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rmissing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies missing points between sample and collected data — rmissing","text":"","code":"rmissing(sampdf, colldf, col_name)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rmissing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies missing points between sample and collected data — rmissing","text":"sampdf object containing data frame sample points colldf object containing data frame collected data col_name common variable (.e. key) data frames check missing points","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rmissing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies missing points between sample and collected data — rmissing","text":"Returns table sample points missing collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rmissing.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identifies missing points between sample and collected data — rmissing","text":"Simplified wrapper around dplyr::anti_join()","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rmissing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies missing points between sample and collected data — rmissing","text":"","code":"alsample <- rsamp(df=albania, 544) alreceived <- rsamp(df=alsample, 390) rmissing(sampdf=alsample, colldf=alreceived, col_name=qvKod) #>      qarku Q_ID        bashkia BAS_ID    zaz            njesiaAdministrative #> 1  Elbasan    4        Elbasan     44 ZAZ 47                     Labinot mal #> 2     Fier    5      Rroskovec     57 ZAZ 60                           Kuman #> 3    Vlore   12          Vlore    128 ZAZ 83                           Vlore #> 4  Elbasan    4         Cerrik     42 ZAZ 46                         Gostime #> 5     Fier    5          Fier      52 ZAZ 57                          Topoje #> 6   Durres    3         Durres     31 ZAZ 22                         Durres  #> 7    Vlore   12          Vlore    128 ZAZ 82                           Vlore #> 8   Tirane   11         Tirane    111 ZAZ 35 Tirane - Njesia Bashkiake Nr. 5 #> 9    Diber    2          Diber     22 ZAZ 19                       Maqellare #> 10 Shkoder   10 Malesi e Madhe    102  ZAZ 1                          Koplik #> 11   Berat    1  Ura Vajgurore     19 ZAZ 62                         Cukalat #> 12   Lezhe    9        Mirdite     94 ZAZ 14                         Kacinar #> 13   Vlore   12          Vlore    128 ZAZ 82                           Vlore #> 14  Tirane   11         Tirane    111 ZAZ 38 Tirane - Njesia Bashkiake Nr. 8 #> 15  Tirane   11         Tirane    111 ZAZ 37 Tirane - Njesia Bashkiake Nr. 7 #> 16   Korce    7       Pogradec     75 ZAZ 67                        Udenisht #> 17 Shkoder   10        Shkoder    105  ZAZ 2                        Gur i zi #> 18  Tirane   11         Tirane    111 ZAZ 30                            Dajt #> 19  Durres    3         Durres     31 ZAZ 23                         Durres  #> 20    Fier    5          Patos     56 ZAZ 59                           Patos #> 21 Shkoder   10        Shkoder    105  ZAZ 2                       Rrethinat #> 22   Korce    7          Korce     73 ZAZ 71                          Mollaj #>    COM_ID   qvKod zgjedhes meshkuj femra totalSeats #> 1    4115  \"2426\"      444     228   216         14 #> 2    5105 \"30381\"      626     325   301         16 #> 3   12312  \"4455\"      894     452   442         12 #> 4    4109  \"2526\"      986     520   466         14 #> 5    5116  \"3214\"      795     420   375         16 #> 6    3101 \"14241\"      743     378   365         14 #> 7   12312  \"4432\"      959     474   485         12 #> 8   11215  \"1844\"      881     441   440         34 #> 9    2207  \"1107\"      358     189   169          6 #> 10  10104 \"00471\"      857     412   445         11 #> 11   1102  \"3335\"      259     143   116          7 #> 12   9302  \"0791\"      224     122   102          7 #> 13  12312 \"44571\"      682     329   353         12 #> 14  11215 \"19401\"      614     281   333         34 #> 15  11215 \"19192\"      692     327   365         34 #> 16   7404  \"3936\"      485     254   231         11 #> 17  10306  \"0340\"      983     498   485         11 #> 18  11204 \"16251\"      455     243   212         34 #> 19   3101  \"1482\"      504     238   266         14 #> 20   5110  \"3073\"      839     439   400         16 #> 21  10310 \"01021\"      830     438   392         11 #> 22   7309  \"4101\"      578     283   295         11 #>                                    vendndodhja ambienti totalVoters femVoters #> 1                 Labinot Mal, shkolla fillore   Publik         277         0 #> 2                                Luar, Shkolla   Publik         293       149 #> 3                      Zyrat e Nd. Ujesjellesi   Publik         384       170 #> 4                   Gjyrale, Shkolla 9-vjecare   Publik         452       228 #> 5                           Topoje 2,  Shkolle   Publik         358       165 #> 6             Lagjia 14, Shkolla \"Isuf Ferra\"    Publik         346       151 #> 7                Shkolla \"Teli Ndini\" - kati I   Publik         345       186 #> 8  Rruga \"Kristo Floqi\", Shkolla\"Besnik Sykja\"   Publik         544       255 #> 9                     Dovolan, Shkolla fillore   Publik         215       119 #> 10                          Shkolla 9- vjecare   Publik         316       154 #> 11                           Krotine,  Shkolla   Publik         153        68 #> 12                  Kacinar, Shkolla 9-vjecare   Publik          74        30 #> 13                 Shkolla \"28 Nentori\" Kati I   Publik         258       124 #> 14                      Shkolla \"Skender Caci\"   Publik         267       139 #> 15                        Shkolla \"Dhora Leka\"   Publik         350       171 #> 16                  Piskupat, Shkolla  Fillore   Publik         319       155 #> 17                   Gur i Zi, Shkolla e mesme   Publik         493       241 #> 18                     Priske e Madhe, Shkolla   Publik         266       110 #> 19                         Shkolla \"Vasil Ziu\"   Publik         176        95 #> 20         Dukas,Lokal privat, Sulejman Rrapaj   Privat         378       161 #> 21                 Dobrac, Qendra Shendetesore   Publik         318       142 #> 22                             Mollaj, Shkolla   Publik         228       109 #>    maleVoters unusedBallots damagedBallots ballotsCast invalidVotes validVotes #> 1         277             0              0         277           18        259 #> 2         144           344              1         293            7        286 #> 3         214           521              5         384            8        376 #> 4         224           550              3         452           10        442 #> 5         193           452              0         358            5        353 #> 6         195           411              0         346            6        340 #> 7         159           633              0         345            8        337 #> 8         289           352              2         544            5        539 #> 9          96           149              1         215            2        213 #> 10        162           558              1         316            2        314 #> 11         85           108              3         153            3        150 #> 12         44             0              0          74            0         74 #> 13        134           424              0         258            3        255 #> 14        128           359              0         267            6        261 #> 15        179           355              0         350            4        346 #> 16        164           175              0         319            5        314 #> 17        252           505              4         493           11        480 #> 18        156           198              0         266            8        258 #> 19         81           338              0         176            2        174 #> 20        217           476              1         378           10        368 #> 21        176           528              0         318            0        318 #> 22        119           361              0         228            3        225 #>    lsi  ps pkd sfida pr  pd pbdksh adk psd ad frd pds pdiu aak mega pksh apd #> 1   58 121   0     1  0  48      0   0   0  0   0   0   31   0    0    0   0 #> 2   22 188   0     0  1  66      0   0   0  0   3   1    2   0    0    0   0 #> 3   31 265   0     0  1  67      0   0   0  0   0   0    5   0    0    0   0 #> 4  142 192   0     0  0  92      0   0   0  0   0   0   15   0    0    0   0 #> 5   93 196   0     0  0  50      0   0   0  0   0  12    0   0    0    0   0 #> 6   79 155   0     0  1  84      0   0   0  0   1   0   19   0    0    0   0 #> 7   26 218   0     1  0  70      0   0   0  0   2   0   16   0    0    0   1 #> 8   94 278   0     4  0 121      0   1   1  0   1   0   24   0    0    0   0 #> 9   16 102   0     0  0  56      0   1   0  0   1   0   37   0    0    0   0 #> 10  20 171   0     0  0  79      0   0  35  0   0   0    4   0    0    0   0 #> 11  15  86   0     0  0  47      0   0   0  0   2   0    0   0    0    0   0 #> 12  14  38   0     0  0  18      0   0   0  0   0   0    4   0    0    0   0 #> 13   6 169   0     0  0  67      0   0   0  0   3   0    5   0    0    1   1 #> 14  24 100   0     3  0 118      0   0   0  0   0   0    5   0    0    0   3 #> 15  40 191   0     2  0  98      0   0   1  0   1   0    3   1    0    0   1 #> 16  51 173   0     0  0  84      0   0   1  0   0   1    0   0    0    0   0 #> 17 138  52   1     0  0  99      1   4 156  1   0   0   24   0    0    0   0 #> 18  21 126   2     0  2  78      0   0   0  0   0   0   13   0    0    0   1 #> 19  25  82   0     1  0  40      0   0   0  0   6   0   19   0    0    0   0 #> 20  71 218   2     0  0  64      0   8   0  0   1   1    1   0    0    2   0 #> 21  14 185   0     0  1  82      0   0  34  0   0   0    0   0    0    0   0 #> 22  54 109   0     0  0  60      0   0   0  0   0   0    0   0    0    0   0 #>    libra psSeats pdSeats lsiSeats pdiuSeats psdSeats #> 1      0       7       3        2         2        0 #> 2      3      10       4        2         0        0 #> 3      7       8       3        1         0        0 #> 4      1       7       3        2         2        0 #> 5      2      10       4        2         0        0 #> 6      1       8       4        2         0        0 #> 7      3       8       3        1         0        0 #> 8     15      18      11        5         0        0 #> 9      0       2       2        1         1        0 #> 10     5       4       5        1         0        1 #> 11     0       4       1        2         0        0 #> 12     0       3       3        1         0        0 #> 13     3       8       3        1         0        0 #> 14     8      18      11        5         0        0 #> 15     8      18      11        5         0        0 #> 16     4       6       4        1         0        0 #> 17     4       4       5        1         0        1 #> 18    15      18      11        5         0        0 #> 19     1       8       4        2         0        0 #> 20     0      10       4        2         0        0 #> 21     2       4       5        1         0        1 #> 22     2       6       4        1         0        0 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 132 rows ]"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rpro.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate proportion and margin of error (simple random sample) — rpro","title":"Calculate proportion and margin of error (simple random sample) — rpro","text":"Calculate proportion margin error (simple random sample)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rpro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate proportion and margin of error (simple random sample) — rpro","text":"","code":"rpro(df, col_name, ci = 95, na = \"\", N = 0)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rpro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate proportion and margin of error (simple random sample) — rpro","text":"df object containing data frame perform analysis (e.g. data) col_name variable data frame want calculate proportion margin error ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) na (optional) value want filter exclude (defaults include everything) N (optional) population universe (e.g. 10000, nrow(df)); N value passed argument, margin error calculated using fpc","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rpro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate proportion and margin of error (simple random sample) — rpro","text":"Returns table responses (n), proportions, margins error, lower upper bounds factor given variable","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rpro.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate proportion and margin of error (simple random sample) — rpro","text":"[1] Sampling Design & Analysis, S. Lohr, 1999, Equation 2.15","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rpro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate proportion and margin of error (simple random sample) — rpro","text":"","code":"rpro(df=opening, col_name=openTime, ci=95, na=\"n/a\", N=5361) #>   openTime   n   midpoint        me       lower     upper #> 1     7_00 408 78.3109405 3.3628622 74.94807827 81.673803 #> 2    7-730  92 17.6583493 3.1114465 14.54690287 20.769796 #> 3    730-8  17  3.2629559 1.4497045  1.81325131  4.712660 #> 4    8-830   4  0.7677543 0.7122214  0.05553288  1.479976"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws simple random sample without replacement — rsamp","title":"Draws simple random sample without replacement — rsamp","text":"Draws simple random sample without replacement","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws simple random sample without replacement — rsamp","text":"","code":"rsamp(df, n, over = 0, rep = FALSE)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws simple random sample without replacement — rsamp","text":"df object containing full sampling data frame (e.g. data) n sample size (integer) object containing sample size (optional) desired oversampling proportion (defaults 0; takes value 0 1 input) rep (optional)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draws simple random sample without replacement — rsamp","text":"Returns simple random sample without replacement","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsamp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Draws simple random sample without replacement — rsamp","text":"Simplified wrapper around dplyr::sample_n()","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsamp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draws simple random sample without replacement — rsamp","text":"","code":"rsamp(albania, n=360, over=0.1, rep=FALSE) #>          qarku Q_ID        bashkia BAS_ID    zaz #> 1      Elbasan    4         Gramsh     43 ZAZ 51 #> 2        Diber    2            Mat     25 ZAZ 16 #> 3        Kukes    8        Tropoje     88  ZAZ 9 #> 4        Berat    1  Ura Vajgurore     19 ZAZ 62 #> 5      Shkoder   10        Shkoder    105  ZAZ 2 #> 6        Berat    1          Berat     11 ZAZ 64 #> 7       Tirane   11         Tirane    111 ZAZ 34 #> 8      Elbasan    4          Peqin     45 ZAZ 44 #> 9        Korce    7         Devoll     71 ZAZ 70 #> 10     Elbasan    4          Belsh     41 ZAZ 45 #> 11      Durres    3         Durres     31 ZAZ 23 #> 12 Gjirokaster    6       Memaliaj     65 ZAZ 76 #> 13       Berat    1          Berat     11 ZAZ 64 #> 14      Tirane   11          Kamez    112 ZAZ 27 #> 15     Shkoder   10        Shkoder    105  ZAZ 2 #> 16     Shkoder   10        Shkoder    105  ZAZ 2 #> 17        Fier    5    Mallakaster     55 ZAZ 61 #> 18      Tirane   11         Tirane    111 ZAZ 32 #> 19        Fier    5          Fier      52 ZAZ 57 #> 20      Durres    3         Durres     31 ZAZ 23 #> 21        Fier    5          Fier      52 ZAZ 57 #> 22     Shkoder   10 Malesi e Madhe    102  ZAZ 1 #>               njesiaAdministrative COM_ID   qvKod zgjedhes meshkuj femra #> 1                           Gramsh   4201  \"2606\"      585     291   294 #> 2                              Lis   2307  \"1005\"      377     188   189 #> 3                         Margegaj   8307  \"0507\"      329     175   154 #> 4                          Kutalli   1103  \"3348\"      483     241   242 #> 5                        Rrethinat  10310  \"0105\"      963     501   462 #> 6                        Velabisht   1111  \"3331\"      423     236   187 #> 7  Tirane - Njesia Bashkiake Nr. 4  11215  \"1786\"      884     422   462 #> 8                            Sheze   4406  \"2296\"      691     369   322 #> 9                           Proger   7105  \"3756\"      221     121   100 #> 10                          Fierze   4105  \"2567\"      549     288   261 #> 11                         Durres    3101  \"1444\"      746     345   401 #> 12                        Memaliaj   6307  \"4365\"      670     346   324 #> 13                          Berat    1101  \"3280\"      508     244   264 #> 14                           Kamez  11206 \"15772\"      776     408   368 #> 15                        Gur i zi  10306  \"0340\"      983     498   485 #> 16                        Gur i zi  10306  \"0338\"      281     146   135 #> 17            Qender - MALLAKASTER   5308  \"3253\"      489     257   232 #> 18 Tirane - Njesia Bashkiake Nr. 2  11215  \"1730\"      856     412   444 #> 19                           Levan   5107  \"3173\"      629     334   295 #> 20                         Durres    3101 \"15041\"      915     439   476 #> 21                        Dermenas   5102  \"3155\"      419     219   200 #> 22         Qender - MALESI E MADHE  10105  \"0061\"      386     208   178 #>    totalSeats                                       vendndodhja ambienti #> 1          14          Rruga- ura,Ambjent Privat,Glaukel Bracja   Privat #> 2           6                                 Mallunxe, Shkolla   Publik #> 3           3                                  Dragobi, Shkolle   Publik #> 4           7                                   Sqepur, Shkolle   Publik #> 5          11                                    Golem, Shkolla   Publik #> 6           7                                Veleshnje, Shkolla   Publik #> 7          34 Rruga ''Aleksander Moisiu'', Shkolla \"Gjon Buzuku   Publik #> 8          14                      Karthnek, Shkolla 9-vjecare    Publik #> 9          11                          Bicke Kopshti i femijeve   Publik #> 10         14                                 Hardhi, Ambulanca   Publik #> 11         14                                     N.SH.Komunale   Publik #> 12          5                                      Kopshti nr.1   Publik #> 13          7   Lagjia \"10 Korriku\", Shkolla \"22 Tetori\" Kati 2   Publik #> 14         34   Rruga \"Asti\" nr.21, Shkolla \"Niko Hoxha\" Valias   Publik #> 15         11                         Gur i Zi, Shkolla e mesme   Publik #> 16         11                         Shpor, Shkolla 9- Vjecare   Publik #> 17         16                                   Lavdan, Shkolla   Publik #> 18         34                   Rr. \"Elbasanit\", Liceu Artistik   Publik #> 19         16                                Bashkim, Ambulanca   Publik #> 20         14             Sigurimet Shoqerore perballe Gjykates   Publik #> 21         16                   Sulaj,lokal privat, Nesti Thomo   Privat #> 22         11                 Koplik i Siperm,shkolla 9-vjecare   Publik #>    totalVoters femVoters maleVoters unusedBallots damagedBallots ballotsCast #> 1          314       135        179             0              0         314 #> 2          222       111        111           178              0         222 #> 3          137        64         73           198              0         137 #> 4          224       111        113           267              1         224 #> 5          445       212        233           555              0         445 #> 6          204        81        123           225              2         204 #> 7          415       220        195           482              3         415 #> 8          309       162        147           391              0         309 #> 9          100        43         57            93              7         100 #> 10         230       114        116           326              3         230 #> 11         328       178        150           432              0         328 #> 12         268       107        161           415              0         268 #> 13         152        76         76           366              0         152 #> 14         347       160        187           439              5         347 #> 15         493       241        252           505              4         493 #> 16         161        78         83           124              1         161 #> 17         273       131        142           220              5         273 #> 18         493       250        243           380              0         493 #> 19         276       128        148           363              2         276 #> 20         381       170        211           552              0         381 #> 21         197        75        122           405              0         197 #> 22         187        81        106           206              0         187 #>    invalidVotes validVotes lsi  ps pkd sfida pr  pd pbdksh adk psd ad frd pds #> 1             3        311  88 144   0     1  0  29      1   0   0  2   0   1 #> 2             4        218  33 105   0     0  0  73      0   0   0  0   0   0 #> 3             2        135  10  32   0     0  2  90      0   0   0  0   0   0 #> 4             1        223  58 130   0     0  0  29      0   0   0  0   0   0 #> 5             2        443  38 224   1     0  3 130      1   0  28  0   0   1 #> 6             7        197  78  90   0     0  1  27      0   0   0  0   0   0 #> 7             3        412  49 245   0     2  0  98      0   0   0  0   3   0 #> 8             5        304  12  54   0     0  0  78      0   0   0  0   1   1 #> 9             5         95  17  18   0     0  0  44      0   0   0  0   0   0 #> 10            1        229  27 107   0     0  0  87      0   0   0  0   0   1 #> 11            6        322  37 164   0     6  0  77      0   1   0  0   6   0 #> 12            4        264  42 151   0     1  0  66      0   0   0  0   1   0 #> 13            2        150  30  70   0     4  0  41      0   0   0  0   0   0 #> 14            5        342  38  86   0     2  0 203      0   0   2  0   1   1 #> 15           11        480 138  52   1     0  0  99      1   4 156  1   0   0 #> 16            0        161  24   6   0     0  0  78      0   0  52  0   0   0 #> 17            5        268  58 115   0     0  1  75      0   2   0  0   3   7 #> 18            6        487  60 242   0     9  0 134      0   0   1  0   3   0 #> 19            4        272  13 194   0     0  1  60      0   0   0  1   0   0 #> 20            4        377  69 168   0     2  1 104      0   0   0  0   8   1 #> 21            0        197   3  34   0     0  1 144      0   0   0  1   1   1 #> 22            1        186  19 103   0     0  0  46      0   0  10  0   0   0 #>    pdiu aak mega pksh apd libra psSeats pdSeats lsiSeats pdiuSeats psdSeats #> 1    45   0    0    0   0     0       7       3        2         2        0 #> 2     5   0    0    0   0     2       2       2        1         1        0 #> 3     0   0    0    0   0     1       1       2        0         0        0 #> 4     1   0    0    1   0     4       4       1        2         0        0 #> 5    16   0    0    0   0     1       4       5        1         0        1 #> 6     1   0    0    0   0     0       4       1        2         0        0 #> 7     5   0    0    0   3     7      18      11        5         0        0 #> 8   156   0    0    2   0     0       7       3        2         2        0 #> 9    14   0    0    0   2     0       6       4        1         0        0 #> 10    7   0    0    0   0     0       7       3        2         2        0 #> 11   27   0    0    0   0     4       8       4        2         0        0 #> 12    3   0    0    0   0     0       3       1        1         0        0 #> 13    2   0    0    0   0     3       4       1        2         0        0 #> 14    5   0    0    0   0     4      18      11        5         0        0 #> 15   24   0    0    0   0     4       4       5        1         0        1 #> 16    0   0    0    0   0     1       4       5        1         0        1 #> 17    7   0    0    0   0     0      10       4        2         0        0 #> 18   16   0    0    0   2    20      18      11        5         0        0 #> 19    2   0    0    0   0     1      10       4        2         0        0 #> 20   17   0    1    0   0     6       8       4        2         0        0 #> 21   12   0    0    0   0     0      10       4        2         0        0 #> 22    1   0    0    0   0     7       4       5        1         0        1 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 374 rows ]  size <- rsampcalc(nrow(albania), 3, 95, 0.5) randomsample <- rsamp(albania, size)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsampcalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines random sample size — rsampcalc","title":"Determines random sample size — rsampcalc","text":"Determines random sample size","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsampcalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines random sample size — rsampcalc","text":"","code":"rsampcalc(N, e, ci = 95, p = 0.5, over = 0)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsampcalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines random sample size — rsampcalc","text":"N population universe (e.g. 10000, nrow(df)) e tolerable margin error (integer float, e.g. 5, 2.5) ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) p (optional) anticipated response distribution (defaults 0.5; takes value 0 1 input) (optional) desired oversampling proportion (defaults 0; takes value 0 1 input)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsampcalc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines random sample size — rsampcalc","text":"Returns appropriate sample size (rounded nearest integer)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsampcalc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determines random sample size — rsampcalc","text":"[1] Sampling Design & Analysis, S. Lohr, 1999, equation 2.17","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsampcalc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determines random sample size — rsampcalc","text":"","code":"rsampcalc(N=5361, e=3, ci=95, p=0.5, over=0.1) #> [1] 979  rsampcalc(nrow(data), 3) #> numeric(0)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/smissing.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies number of missing points by strata between sample and collected data — smissing","title":"Identifies number of missing points by strata between sample and collected data — smissing","text":"Identifies number missing points strata sample collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/smissing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies number of missing points by strata between sample and collected data — smissing","text":"","code":"smissing(sampdf, colldf, strata, col_name)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/smissing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies number of missing points by strata between sample and collected data — smissing","text":"sampdf object containing data frame sample points colldf object containing data frame collected data strata variable data frames stratify col_name common variable (.e. key) data frames check missing points","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/smissing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies number of missing points by strata between sample and collected data — smissing","text":"Returns table number sample points strata missing collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/smissing.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identifies number of missing points by strata between sample and collected data — smissing","text":"Simplified wrapper around dplyr::anti_join()","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/smissing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies number of missing points by strata between sample and collected data — smissing","text":"","code":"alsample <- rsamp(df=albania, 544) alreceived <- rsamp(df=alsample, 390) smissing(sampdf=alsample, colldf=alreceived, strata=qarku, col_name=qvKod) #>          qarku received missing pctreceived pctmissing #> 1        Berat       23      11    67.64706   32.35294 #> 2        Diber       26       5    83.87097   16.12903 #> 3       Durres       39       8    82.97872   17.02128 #> 4      Elbasan       36      18    66.66667   33.33333 #> 5         Fier       51      17    75.00000   25.00000 #> 6  Gjirokaster       20       6    76.92308   23.07692 #> 7        Korce       32      11    74.41860   25.58140 #> 8        Kukes       10       6    62.50000   37.50000 #> 9        Lezhe       12       4    75.00000   25.00000 #> 10     Shkoder       22      17    56.41026   43.58974 #> 11      Tirane       88      35    71.54472   28.45528 #> 12       Vlore       31      16    65.95745   34.04255"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/spro.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate proportion and margin of error (stratified sample) — spro","title":"Calculate proportion and margin of error (stratified sample) — spro","text":"Calculate proportion margin error (stratified sample)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/spro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate proportion and margin of error (stratified sample) — spro","text":"","code":"spro(fulldf, sampdf, strata, col_name, ci = 95, na = \"\")"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/spro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate proportion and margin of error (stratified sample) — spro","text":"fulldf object containing original data frame used draw sample sampdf object containing data frame perform analysis strata variable data frames stratify col_name variable data frame want calculate proportion margin error ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) na (optional) value want filter exclude (defaults include everything)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/spro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate proportion and margin of error (stratified sample) — spro","text":"Returns table responses (n), proportions, margins error, lower upper bounds factor given variable stratified sample","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/spro.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate proportion and margin of error (stratified sample) — spro","text":"[1] Sampling Design & Analysis, S. Lohr, 1999, 4.6 & 4.7","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/spro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate proportion and margin of error (stratified sample) — spro","text":"","code":"spro(fulldf=albania, sampdf=opening, strata=qarku, col_name=openTime, ci=95, na=\"n/a\") #>   openTime   n   midpoint        me       lower     upper #> 1     7_00 408 78.3676959 3.3312036 75.03649228 81.698900 #> 2    7-730  92 17.6001119 3.0807742 14.51933775 20.680886 #> 3    730-8  17  3.2674097 1.4554306  1.81197911  4.722840 #> 4    8-830   4  0.7647825 0.7085333  0.05624911  1.473316"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws stratifed sample without replacement using proportional allocation — ssamp","title":"Draws stratifed sample without replacement using proportional allocation — ssamp","text":"Draws stratifed sample without replacement using proportional allocation","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws stratifed sample without replacement using proportional allocation — ssamp","text":"","code":"ssamp(df, n, strata, over = 1)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws stratifed sample without replacement using proportional allocation — ssamp","text":"df object containing full sampling data frame (e.g. data) n sample size (integer) object containing sample size strata variable sampling data frame stratify (e.g. region) (optional) desired oversampling proportion (defaults 0; takes value 0 1 input)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draws stratifed sample without replacement using proportional allocation — ssamp","text":"Returns stratified sample without replacement","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssamp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draws stratifed sample without replacement using proportional allocation — ssamp","text":"","code":"ssamp(df=albania, n=360, strata=qarku, over=0.1) #> # A tibble: 395 × 45 #>    qarku  Q_ID bashkia       BAS_ID zaz   njesiaAdministr… COM_ID qvKod zgjedhes #>    <fct> <int> <fct>          <int> <fct> <fct>             <int> <fct>    <int> #>  1 Berat     1 Kucove            13 ZAZ … \"Lumas\"            1104 \"\\\"3…      366 #>  2 Berat     1 Kucove            13 ZAZ … \"Lumas\"            1104 \"\\\"3…      264 #>  3 Berat     1 Ura Vajgurore     19 ZAZ … \"Poshnje\"          1106 \"\\\"3…      654 #>  4 Berat     1 Berat             11 ZAZ … \"Berat \"           1101 \"\\\"3…      535 #>  5 Berat     1 Kucove            13 ZAZ … \"Kucove\"           1201 \"\\\"3…      764 #>  6 Berat     1 Kucove            13 ZAZ … \"Perondi\"          1203 \"\\\"3…      347 #>  7 Berat     1 Ura Vajgurore     19 ZAZ … \"Poshnje\"          1106 \"\\\"3…      381 #>  8 Berat     1 Skrapar           17 ZAZ … \"Zhepe\"            1310 \"\\\"3…      334 #>  9 Berat     1 Skrapar           17 ZAZ … \"Gjerbes\"          1304 \"\\\"3…      349 #> 10 Berat     1 Skrapar           17 ZAZ … \"Potom\"            1307 \"\\\"3…      286 #> # … with 385 more rows, and 36 more variables: meshkuj <int>, femra <int>, #> #   totalSeats <int>, vendndodhja <fct>, ambienti <fct>, totalVoters <int>, #> #   femVoters <int>, maleVoters <int>, unusedBallots <int>, #> #   damagedBallots <int>, ballotsCast <int>, invalidVotes <int>, #> #   validVotes <int>, lsi <int>, ps <int>, pkd <int>, sfida <int>, pr <int>, #> #   pd <int>, pbdksh <int>, adk <int>, psd <int>, ad <int>, frd <int>, #> #   pds <int>, pdiu <int>, aak <int>, mega <int>, pksh <int>, apd <int>, …  size <- rsampcalc(nrow(albania), 3, 95, 0.5) stratifiedsample <- ssamp(albania, size, qarku)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssampcalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines sample size by strata using proportional allocation — ssampcalc","title":"Determines sample size by strata using proportional allocation — ssampcalc","text":"Determines sample size strata using proportional allocation","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssampcalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines sample size by strata using proportional allocation — ssampcalc","text":"","code":"ssampcalc(df, n, strata, over = 0)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssampcalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines sample size by strata using proportional allocation — ssampcalc","text":"df object containing sampling data frame (e.g. data) n sample size (integer) object containing sample size strata variable sampling data frame stratify (e.g. region) (optional) desired oversampling proportion (defaults 0; takes value 0 1 input)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssampcalc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines sample size by strata using proportional allocation — ssampcalc","text":"Returns proportional sample size per strata (rounded nearest integer)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssampcalc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determines sample size by strata using proportional allocation — ssampcalc","text":"[1] Sampling Design & Analysis, S. Lohr, 1999, 4.4","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssampcalc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determines sample size by strata using proportional allocation — ssampcalc","text":"","code":"ssampcalc(df=albania, n=544, strata=qarku, over=0.05) #> # A tibble: 12 × 4 #>    qarku          Nh wt[,1] nh[,1] #>    <fct>       <int>  <dbl>  <dbl> #>  1 Berat         305 0.0569     33 #>  2 Diber         259 0.0483     28 #>  3 Durres        460 0.0858     49 #>  4 Elbasan       547 0.102      58 #>  5 Fier          591 0.110      63 #>  6 Gjirokaster   235 0.0438     25 #>  7 Korce         463 0.0863     49 #>  8 Kukes         173 0.0323     18 #>  9 Lezhe         263 0.0490     28 #> 10 Shkoder       421 0.0785     45 #> 11 Tirane       1198 0.223     128 #> 12 Vlore         447 0.0834     48  size <- rsampcalc(nrow(albania), 3, 95, 0.5) ssampcalc(albania, size, qarku) #> # A tibble: 12 × 4 #>    qarku          Nh wt[,1] nh[,1] #>    <fct>       <int>  <dbl>  <dbl> #>  1 Berat         305 0.0569     51 #>  2 Diber         259 0.0483     43 #>  3 Durres        460 0.0858     76 #>  4 Elbasan       547 0.102      91 #>  5 Fier          591 0.110      98 #>  6 Gjirokaster   235 0.0438     39 #>  7 Korce         463 0.0863     77 #>  8 Kukes         173 0.0323     29 #>  9 Lezhe         263 0.0490     44 #> 10 Shkoder       421 0.0785     70 #> 11 Tirane       1198 0.223     199 #> 12 Vlore         447 0.0834     74"}]
