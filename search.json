[{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/articles/vignettes.html","id":"question","dir":"Articles","previous_headings":"","what":"Question","title":"Vignettes","text":"-Among password types, category easiest cracked? -strength password related time crack ?","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/articles/vignettes.html","id":"data-link-with-dictionary","dir":"Articles","previous_headings":"","what":"Data link with dictionary","title":"Vignettes","text":"data set variety commonly used passwords sourced Information Beautiful. data dictionary can found https://github.com/rfordatascience/tidytuesday/tree/master/data/2020/2020-01-14.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/articles/vignettes.html","id":"data-loading-wrangling","dir":"Articles","previous_headings":"","what":"Data loading & wrangling","title":"Vignettes","text":"","code":"main_dir <- here() sub_dir <- \"data\" if (file.exists(sub_dir)){       # specifying the working directory       setwd(file.path(main_dir, sub_dir)) } else {       # create a new sub directory inside       # the main path       dir.create(file.path(main_dir, sub_dir))                # specifying the working directory       setwd(file.path(main_dir, sub_dir)) } if(!file.exists(here(\"data\",\"passwords.RDS\"))){   passwords <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2020/2020-01-14/passwords.csv')   # save the files to RDS objects   saveRDS(passwords, file = \"passwords.RDS\") } passwords <- readRDS(paste0(file.path(main_dir, sub_dir), \"/passwords.RDS\")) x.1 <- passwords %>% drop_na() x.2 <- x.1 %>% filter(offline_crack_sec < 0.5) # x.2$category <- as.factor(x.2$category) ggplot(x.2) + geom_boxplot(aes(y = offline_crack_sec, x = category)) +    labs(title = \"Offline cracking time within different category\",        subtitle = \"Nerdy pop, sport, and password related codes are slightly harder to crack\",        caption = \"Plot made by Bolun Liu\") +    xlab(\"Category\") + ylab(\"Time\") + theme(axis.text.x = element_text(angle = 45, hjust=1)) x.3 <- x.1 %>% filter(str_detect(time_unit, \"day\"))  names <- rep(\"simple\", length(which(x.3$category == \"simple-alphanumeric\"))) set_names(x.3$category[which(x.3$category == \"simple-alphanumeric\")], names) ##                simple                simple                simple  ## \"simple-alphanumeric\" \"simple-alphanumeric\" \"simple-alphanumeric\"  ##                simple                simple                simple  ## \"simple-alphanumeric\" \"simple-alphanumeric\" \"simple-alphanumeric\"  ##                simple                simple                simple  ## \"simple-alphanumeric\" \"simple-alphanumeric\" \"simple-alphanumeric\"  ##                simple                simple                simple  ## \"simple-alphanumeric\" \"simple-alphanumeric\" \"simple-alphanumeric\" ggplot(x.3) + geom_point(aes(y = strength, x = offline_crack_sec)) +      labs(title = \"Password strength against offline cracking time\",        subtitle = \"Their mannual set password strength doesn't seem to be a good criteria. \\nI am quite surprised by this result.\\n This suggests the strength here might not be a base for accurate analysis.\",        caption = \"Plot made by Bolun Liu\") +    xlab(\"Time\") + ylab(\"Strength\") x.4 <- x.1 %>% split(x.1$category) x.4 %>% map(.f = ~mean(.x$rank)) ## $animal ## [1] 257.5517 ##  ## $`cool-macho` ## [1] 259.7975 ##  ## $fluffy ## [1] 240.1136 ##  ## $food ## [1] 239.4545 ##  ## $name ## [1] 264.6557 ##  ## $`nerdy-pop` ## [1] 272.1667 ##  ## $`password-related` ## [1] 169.6 ##  ## $`rebellious-rude` ## [1] 215.0909 ##  ## $`simple-alphanumeric` ## [1] 231.4098 ##  ## $sport ## [1] 227.973 x.5 <- x.3 %>% select(password, category, rank, strength)  ggplot(data = x.5) + geom_histogram(aes(x = rank)) + facet_grid(rows = vars(category)) +     labs(title = \"Histograms of password ranks by category\",        subtitle = \"Although password-related and rude passwords have higher ranks on average,\\nanimal-related and simple-alphanumeric passwords appears to be most common individually.\",        caption = \"Plot made by Bolun Liu\") +    xlab(\"Rank statistics\") + ylab(\"Frequency\") ## `stat_bin()` using `bins = 30`. Pick better value with `binwidth`. n<-rsampcalc(N=500, e=1, ci=95, p=0.5, over=0) n ## [1] 476 strata <- ssampcalc(df=x.1, n=n, strata=category, over=0) strata ## # A tibble: 10 × 4 ##    category               Nh wt[,1] nh[,1] ##    <chr>               <int>  <dbl>  <dbl> ##  1 animal                 29  0.058     28 ##  2 cool-macho             79  0.158     75 ##  3 fluffy                 44  0.088     42 ##  4 food                   11  0.022     10 ##  5 name                  183  0.366    174 ##  6 nerdy-pop              30  0.06      29 ##  7 password-related       15  0.03      14 ##  8 rebellious-rude        11  0.022     10 ##  9 simple-alphanumeric    61  0.122     58 ## 10 sport                  37  0.074     35"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/articles/vignettes.html","id":"result","dir":"Articles","previous_headings":"","what":"Result","title":"Vignettes","text":"average rank statistics, category password-related (“password”) rebellious-rude (“biteme”) type passwords common. Individually, simple-alphanumeric code “1111” “aaaa” popular. Among category, nerdy-pop, sport, password-related codes relatively harder crack, different can negligble. Moreover, strength data set related cracking time, indicating good candidate data analysis. sample data set can recover sample mean marginal error 1 95% CI, effective sample size 476, calculated rsampcalc(). sample within different strata (, catagory) sample sizes, ssampcalc() gives reasonable sampling scheme.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/articles/vignettes.html","id":"function-used","dir":"Articles","previous_headings":"","what":"function used","title":"Vignettes","text":"tidyr: drop_na(), filter(), select(), as_tibble(), str_detect(), as_factor() purrr: map(), set_name() ggplot: geom_point(), geom_histogram(), geom_boxplot() sampler: rsampcalc(), ssampcalc()","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Baldassaro. Maintainer.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Baldassaro M (2022). sampler: Sample Design, Drawing & Data Analysis Using Data Frames. https://github.com/mbaldassaro/sampler, https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/.","code":"@Manual{,   title = {sampler: Sample Design, Drawing & Data Analysis Using Data Frames},   author = {Michael Baldassaro},   year = {2022},   note = {https://github.com/mbaldassaro/sampler, https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/}, }"},{"path":[]},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"original-author","dir":"","previous_headings":"","what":"Original author","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"Michael Baldassaro, Mara Averick","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"original-github-link","dir":"","previous_headings":"","what":"Original github link","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"https://github.com/mbaldassaro/sampler","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"practice-website-link","dir":"","previous_headings":"","what":"Practice website link","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"customization","dir":"","previous_headings":"","what":"Customization","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"use bootswatch lux use theme breeze-light change background color change font color change font base, heading, code.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"r-package-for-sample-design-drawing--data-analysis-using-data-frames","dir":"","previous_headings":"","what":"R Package for Sample Design, Drawing, & Data Analysis Using Data Frames","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"sampler R package designed enable data scientists design, draw, analyze simple complex samples using data frames. enables load machine-readable files (e.g. .csv, .tsv, etc.) R containing sampling frame collected data, store objects, perform sampling techniques analysis using clear concise methods. Specifically, data scientist can use sampler R package : determine simple random sample sizes, stratified sample sizes, complex stratified sample sizes using secondary variable population draw simple random samples stratified random samples sampling data frames determine observations missing random sample, missing strata, duplicated within dataset perform data analysis, including proportions, margins error upper lower bounds simple, stratified cluster sample designs sampler R package builds bridge survey administrators free open-source R environment --low cost Open Data Kit (ODK)-based toolkits Ona NEMO. sampler package available via CRAN GitHub use R R Studio.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"to-install-in-r-from-cran","dir":"","previous_headings":"","what":"To install in R from CRAN:","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"","code":"install.packages(\"sampler\") library(sampler)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"to-install-in-r-from-github","dir":"","previous_headings":"","what":"To install in R from GitHub:","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":"sampler R package includes following datasets: albania: dataset containing 2017 Albania election results polling station published Central Election Commission opened Coalition Domestic Observers & Democracy International opening: dataset containing 2017 Albania election observation findings polling station opening process Coalition Domestic Observers (CDO) CDO conducted statistically-based observation (SBO) exercise, deploying observers random sample polling stations 25 June 2017 Albanian elections. subset observation data collected CDO observers includes data used perform statistical analysis Full documentation datasets functions can found RDocumentation","code":"install.packages(\"devtools\"); library(devtools) devtools::install_github(\"mbaldassaro/sampler\"); library(sampler)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"determine-random-sample-size","dir":"","previous_headings":"","what":"Determine random sample size","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * N population universe (e.g. 10000, nrow(df)) * e tolerable margin error (integer float, e.g. 5, 2.5) * ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) * p (optional) anticipated response distribution (defaults 0.5; takes value 0 1 input) * (optional) desired oversampling proportion (defaults 0; takes value 0 1 input) Returns appropriate sample size (rounded nearest integer) Example: Source: Sampling Design & Analysis, S. Lohr, 1999, equation 2.17","code":"rsampcalc(N, e, ci=95,p=0.5, over=0) rsampcalc(N=5361, e=3, ci=95, p=0.5, over=0.1)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"draw-a-simple-random-sample","dir":"","previous_headings":"","what":"Draw a simple random sample","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing full sampling data frame * n sample size (integer object containing sample size) * (optional) desired oversampling proportion (defaults 0; takes value 0 1 input) * rep (optional) boolean sample repalcement (TRUE) without replacement (defaults FALSE) Returns simple random sample size n Example: ","code":"rsamp(df, n, over=0, rep=FALSE) rsamp(albania, n=360, over=0.1, rep=FALSE) size <- rsampcalc(nrow(albania), 3, 95, 0.5) rsamp(albania, size)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"determine-sample-size-by-strata-using-proportional-allocation","dir":"","previous_headings":"","what":"Determine sample size by strata using proportional allocation","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing sampling data frame * n sample size (integer) object containing sample size * strata variable sampling data frame stratify * (optional) desired oversampling proportion (defaults 0; takes value 0 1 input) Returns proportional sample size per strata (rounded nearest integer) Example: Source: Sampling Design & Analysis, S. Lohr, 1999, 4.4","code":"ssampcalc(df, n, strata, over=0) ssampcalc(df=albania, n=544, strata=qarku, over=0.05) size <- rsampcalc(nrow(albania), 3, 95, 0.5) ssampcalc(albania, size, qarku)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"draw-stratified-sample-proportional-allocation","dir":"","previous_headings":"","what":"Draw stratified sample (proportional allocation)","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing full sampling data frame * n sample size (integer, object containing sample size) * strata variable sampling data frame stratify (e.g. region) * (optional) desired oversampling proportion (defaults 0; takes value 0 1 input) Returns stratified sample using proportional allocation without replacement Example: ","code":"ssamp(df, n, strata, over=1) ssamp(df=albania, n=360, strata=qarku, over=0.1) size <- rsampcalc(nrow(albania), 3, 95, 0.5) ssamp(albania, size, qarku)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"determine-sample-size-by-strata-using-sub-units","dir":"","previous_headings":"","what":"Determine sample size by strata using sub-units","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing full sampling data frame * n sample size (integer) object containing sample size * strata variable sampling data frame stratify * unit variable sampling data frame containing sub-units (e.g. population) * (optional) desired oversampling proportion (defaults 0; takes value 0 1 input) Returns sample size per strata based sub-units (rounded nearest integer) Example Source: Sampling Design & Analysis, S. Lohr, 1999, 4.4","code":"psampcalc(df, n, strata, unit, over=0) psampcalc(df=albania, n=544, strata=qarku, unit=zgjedhes, over=0.1)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"calculate-proportion-and-margin-of-error-simple-random-sample","dir":"","previous_headings":"","what":"Calculate proportion and margin of error (simple random sample)","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing data frame perform analysis (e.g. data) * col_name variable data frame want calculate proportion margin error * ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) * na (optional) value want filter exclude (defaults include everything) * N (optional) population universe (e.g. 10000, nrow(df)); N value passed argument, margin error calculated using fpc Returns table responses (n), proportions (midpoint), margins error, lower upper bounds factor given variable Example: Source: Sampling Design & Analysis, S. Lohr, 1999, Equation 2.15","code":"rpro(df, col_name, ci=95, na=\"\", N=0) rpro(df=opening, col_name=openTime, ci=95, na=\"n/a\", N=5361)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"calculate-proportion-and-margin-of-error-stratified-sample","dir":"","previous_headings":"","what":"Calculate proportion and margin of error (stratified sample)","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * fulldf object containing original data frame used draw sample * sampdf object containing data frame perform analysis * strata variable data frames stratify * col_name variable data frame want calculate proportion margin error * ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) * na (optional) value want filter exclude (defaults include everything) Returns table responses (n), proportions (midpoint), margins error, lower upper bounds factor given variable stratified sample Example: Source: Sampling Design & Analysis, S. Lohr, 1999, 4.6 & 4.7","code":"spro(fulldf, sampdf, strata, col_name, ci=95, na=\"\") spro(fulldf=albania, sampdf=opening, strata=qarku, col_name=openTime, ci=95, na=\"n/a\")"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"calculate-proportion-and-margin-of-error-unequal-sized-cluster-sample","dir":"","previous_headings":"","what":"Calculate proportion and margin of error (unequal-sized cluster sample)","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing data frame perform analysis * numerator variable data frame want calculate proportion margin error * denominator variable data frame containing population unequal cluster sizes * ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) * na (optional) value want filter exclude (defaults include everything) * N (optional) population universe (e.g. 10000, nrow(df)); N value passed argument, margin error calculated using fpc Returns table responses (n), proportions (midpoint), margins error, lower upper bounds factor given variable unequal-sized cluster sample Example: Source 1: Survey Sampling, L. Kish, 1965, Equation 6.3.4 Source 2: Sampling Techniques, W.G. Cochran, 1977, Equation 3.34","code":"cpro(df, numerator, denominator, ci=95, na=\"\", N=0) alresults <- ssamp(albania, 890, qarku) cpro(df=alresults, numerator=totalVoters, denominator=zgjedhes, ci=95) cpro(df=alresults, numerator=pd, denominator=validVotes, ci=95, N=5361)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"identify-missing-points-between-sample-and-collected-data","dir":"","previous_headings":"","what":"Identify missing points between sample and collected data","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * sampdf object containing data frame sample points * colldf object containing data frame collected data * col_name common variable (.e. key) data frames check missing points Returns table sample points missing collected data Example:","code":"rmissing(sampdf, colldf, col_name) alsample <- rsamp(df=albania, 544) alreceived <- rsamp(df=alsample, 390) rmissing(sampdf=alsample, colldf=alreceived, col_name=qvKod)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"identify-number-of-missing-points-by-strata-between-sample-and-collected-data","dir":"","previous_headings":"","what":"Identify number of missing points by strata between sample and collected data","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * sampdf object containing data frame sample points * colldf object containing data frame collected data * strata variable data frames stratify * col_name common variable (.e. key) data frames check missing points Returns table number sample points strata missing collected data Example:","code":"smissing(sampdf, colldf, strata, col_name) alsample <- rsamp(df=albania, 544) alreceived <- rsamp(df=alsample, 390) smissing(sampdf=alsample, colldf=alreceived, strata=qarku, col_name=qvKod)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"identify-duplicate-values-within-collected-data","dir":"","previous_headings":"","what":"Identify duplicate values within collected data","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing data frame collected data * col_name variable within data frame filter duplicate values Returns table duplicate values within collected data Example:","code":"dupe(df, col_name) aldupe <- rsamp(df=albania, n=390, rep=TRUE) dupe(df=aldupe, col_name=qvKod)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/index.html","id":"remove-observations-based-on-duplicate-values-within-collected-data","dir":"","previous_headings":"","what":"Remove observations based on duplicate values within collected data","title":"Sample Design, Drawing & Data Analysis Using Data Frames","text":": * df object containing data frame collected data * col_name variable within data frame filter duplicate values Returns table observations based unique values within collected data Example:","code":"dedupe(df, col_name) aldupe <- rsamp(df=albania, n=390, rep=TRUE) dedupe(df=aldupe, col_name=qvKod)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/albania.html","id":null,"dir":"Reference","previous_headings":"","what":"Albania 2017 Election Results by Polling Station — albania","title":"Albania 2017 Election Results by Polling Station — albania","text":"Data set containing 2017 Albania election results polling station published Central Election Commission opened Coalition Domestic Observers & Democracy International.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/albania.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Albania 2017 Election Results by Polling Station — albania","text":"","code":"albania"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/albania.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Albania 2017 Election Results by Polling Station — albania","text":"data frame 5362 rows 45 variables qarku district, 12 total Q_ID geocode district bashkia municipality, 61 total BAS_ID geocode municipality zaz election area zone, 90 total njesiaAdministrative village, 373 total COM_ID geocode village qvKod polling station identifier zgjedhes number total registered voters meshkuj number male registered voters femra number female registered voters totalSeats number seats contested district vendndodhja name polling center containing polling stations ambienti type polling center, 5 total totalVoters number total registered voters cast ballots femVoters number female registered voters cast ballots maleVoters number male registered voters cast ballots unusedBallots number ballots used damagedBallots number ballots damaged ballotsCast number total ballots cast invalidVotes number ballots cast invalidated validVotes number valid ballots cast lsi number ballots cast LSI ps number ballots cast PS pkd number ballots cast PKD sfida number ballots cast SFIDA pr number ballots cast PR pd number ballots cast PD pbdksh number ballots cast PBDKSH adk number ballots cast ADK psd number ballots cast PSD ad number ballots cast AD frd number ballots cast FRD pds number ballots cast PDS pdiu number ballots cast PDIU aak number ballots cast AAK mega number ballots cast MEGA pksh number ballots cast PKSH apd number ballots cast APD libra number ballots cast LIBRA psSeats number seats won PS pdSeats number seats won PD lsiSeats number seats won LSI pdiuSeats number seats won PDIU psdSeats number seats won PSD","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/albania.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Albania 2017 Election Results by Polling Station — albania","text":"https://albaniaelectiondata.herokuapp.com/","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/cpro.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","title":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","text":"Calculate proportion margin error (unequal-sized cluster sample)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/cpro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","text":"","code":"cpro(df, numerator, denominator, ci = 95, na = \"\", N = 0)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/cpro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","text":"df object containing data frame perform analysis numerator variable data frame want calculate proportion margin error denominator variable data frame containing population sizes unequal clusters ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) na (optional) value want filter exclude (defaults include everything) N (optional) population universe (e.g. 10000, nrow(df)); N value passed argument, margin error calculated using fpc","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/cpro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","text":"Returns table responses (n), proportions, margins error, lower upper bounds factor given variable stratified sample","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/cpro.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","text":"[1] Survey Sampling, L. Kish, 1965, Equation 6.3.4 [2] Sampling Techniques, W.G. Cochran, 1977, Equation 3.34","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/cpro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate proportion and margin of error (unequal-sized cluster sample) — cpro","text":"","code":"alresults <- ssamp(albania, 890, qarku) cpro(df=alresults, numerator=totalVoters, denominator=zgjedhes, ci=95) #> # A tibble: 1 × 5 #>       n midpoint    me lower upper #>   <int>    <dbl> <dbl> <dbl> <dbl> #> 1   891     47.2 0.625  46.6  47.8 cpro(df=alresults, numerator=pd, denominator=validVotes, ci=95, N=5361) #> # A tibble: 1 × 5 #>       n midpoint    me lower upper #>   <int>    <dbl> <dbl> <dbl> <dbl> #> 1   891     28.8 0.744  28.0  29.5"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dedupe.html","id":null,"dir":"Reference","previous_headings":"","what":"Removes duplicate observations within collected data — dedupe","title":"Removes duplicate observations within collected data — dedupe","text":"Removes duplicate observations within collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dedupe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Removes duplicate observations within collected data — dedupe","text":"","code":"dedupe(df, col_name)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dedupe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Removes duplicate observations within collected data — dedupe","text":"df object containing data frame collected data col_name variable within data frame filter duplicate values","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dedupe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Removes duplicate observations within collected data — dedupe","text":"Returns table data based unique values within collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dedupe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Removes duplicate observations within collected data — dedupe","text":"","code":"aldupe <- rsamp(df=albania, n=390, rep=TRUE) dedupe(df=aldupe, col_name=qvKod) #> # A tibble: 378 × 45 #> # Groups:   qvKod [378] #>    qarku    Q_ID bashkia     BAS_ID zaz   njesiaAdministr… COM_ID qvKod zgjedhes #>    <fct>   <int> <fct>        <int> <fct> <fct>             <int> <fct>    <int> #>  1 Durres      3 \"Durres\"        31 ZAZ … \"Durres \"          3101 \"\\\"1…      983 #>  2 Tirane     11 \"Kamez\"        112 ZAZ … \"Kamez\"           11206 \"\\\"1…      751 #>  3 Tirane     11 \"Tirane\"       111 ZAZ … \"Tirane - Njesi…  11215 \"\\\"1…      777 #>  4 Vlore      12 \"Vlore\"        128 ZAZ … \"Novosele\"        12305 \"\\\"4…      720 #>  5 Durres      3 \"Durres\"        31 ZAZ … \"Sukth\"            3109 \"\\\"1…      557 #>  6 Tirane     11 \"Tirane\"       111 ZAZ … \"Kashar\"          11207 \"\\\"1…      553 #>  7 Fier        5 \"Rroskovec\"     57 ZAZ … \"Strum\"            5115 \"\\\"3…      512 #>  8 Fier        5 \"Fier \"         52 ZAZ … \"Fier\"             5103 \"\\\"3…      789 #>  9 Shkoder    10 \"Shkoder\"      105 ZAZ 2 \"Ana Malit\"       10301 \"\\\"0…      568 #> 10 Elbasan     4 \"Gramsh\"        43 ZAZ … \"Gramsh\"           4201 \"\\\"2…      475 #> # … with 368 more rows, and 36 more variables: meshkuj <int>, femra <int>, #> #   totalSeats <int>, vendndodhja <fct>, ambienti <fct>, totalVoters <int>, #> #   femVoters <int>, maleVoters <int>, unusedBallots <int>, #> #   damagedBallots <int>, ballotsCast <int>, invalidVotes <int>, #> #   validVotes <int>, lsi <int>, ps <int>, pkd <int>, sfida <int>, pr <int>, #> #   pd <int>, pbdksh <int>, adk <int>, psd <int>, ad <int>, frd <int>, #> #   pds <int>, pdiu <int>, aak <int>, mega <int>, pksh <int>, apd <int>, …"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dupe.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies duplicate values within collected data — dupe","title":"Identifies duplicate values within collected data — dupe","text":"Identifies duplicate values within collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dupe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies duplicate values within collected data — dupe","text":"","code":"dupe(df, col_name)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dupe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies duplicate values within collected data — dupe","text":"df object containing data frame collected data col_name variable within data frame filter duplicate values","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dupe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies duplicate values within collected data — dupe","text":"Returns table duplicate values within collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/dupe.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies duplicate values within collected data — dupe","text":"","code":"aldupe <- rsamp(df=albania, n=390, rep=TRUE) dupe(df=aldupe, col_name=qvKod) #> # A tibble: 16 × 2 #> # Groups:   qvKod [16] #>    qvKod           n #>    <fct>       <int> #>  1 \"\\\"0159\\\"\"      2 #>  2 \"\\\"0190\\\"\"      2 #>  3 \"\\\"0541\\\"\"      2 #>  4 \"\\\"0913\\\"\"      2 #>  5 \"\\\"2368\\\"\"      2 #>  6 \"\\\"2376\\\"\"      2 #>  7 \"\\\"25441\\\"\"     2 #>  8 \"\\\"2728\\\"\"      3 #>  9 \"\\\"2823\\\"\"      2 #> 10 \"\\\"2835\\\"\"      2 #> 11 \"\\\"2937\\\"\"      2 #> 12 \"\\\"3203\\\"\"      2 #> 13 \"\\\"36481\\\"\"     2 #> 14 \"\\\"3717\\\"\"      2 #> 15 \"\\\"4661\\\"\"      2 #> 16 \"\\\"46751\\\"\"     2"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/opening.html","id":null,"dir":"Reference","previous_headings":"","what":"Albania 2017 CDO Election Observation Data Findings on Opening Process — opening","title":"Albania 2017 CDO Election Observation Data Findings on Opening Process — opening","text":"Data set containing 2017 Albania election observation findings polling station opening process Coalition Domestic Observers (CDO) CDO conducted statistically-based observation (SBO) exercise, deploying observers random sample polling stations 25 June 2017 Albanian elections. subset observation data collected CDO observers includes data used perform statistical analysis.","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/opening.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Albania 2017 CDO Election Observation Data Findings on Opening Process — opening","text":"","code":"opening"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/opening.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Albania 2017 CDO Election Observation Data Findings on Opening Process — opening","text":"data frame 524 rows 19 variables qarku district, 12 total psID polling station identifier votersList number registered voters polling station ballotPapers number ballot papers polling station pubPriv type polling station, public private openTime time polling station opening, 30 minute ranges numKommish number commissioners present polling station secrecyOpen yes-polling station enabled voters cast ballots secrecy, po jo movementOpen yes-polling station provided sufficient space vote, po jo removeMatInside yes-campaign materials removed inside polling station, po jo removeMatOutside yes-campaign materials removed outside polling station, po jo pvComplete yes-commissioners completed opening record checklist sheet, po jo boxChecked yes-commissioners checked ensure ballot box empty opening, po jo boxSealed yes-commissioners sealed ballot box prevent ballot tampering, po jo recordBox yes-commissioners recorded seal number ballot box, po jo centerMat yes-election materials available polling station, po jo blindTools yes-polling station equipped blind voters, po jo disabledTools yes--partially polling station equipped disabled voters, po jo pjeserisht overallOpen good-good-problematic-problematic overall assessment opening process, shummir,mir,meprob,shumprob","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/opening.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Albania 2017 CDO Election Observation Data Findings on Opening Process — opening","text":"https://ona.io/cdo/35080/216662","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/psampcalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines sample size by strata using sub-units — psampcalc","title":"Determines sample size by strata using sub-units — psampcalc","text":"Determines sample size strata using sub-units","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/psampcalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines sample size by strata using sub-units — psampcalc","text":"","code":"psampcalc(df, n, strata, unit, over = 0)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/psampcalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines sample size by strata using sub-units — psampcalc","text":"df object containing full sampling data frame (e.g. data) n sample size (integer) object containing sample size strata variable sampling data frame stratify (e.g. region) unit variable sampling data frame containing sub-units (e.g. population) (optional) desired oversampling proportion (defaults 0; takes value 0 1 input)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/psampcalc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines sample size by strata using sub-units — psampcalc","text":"Returns sample size per strata based sub-units (rounded nearest integer)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/psampcalc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determines sample size by strata using sub-units — psampcalc","text":"[1] Sampling Design & Analysis, S. Lohr, 1999, 4.4","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rmissing.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies missing points between sample and collected data — rmissing","title":"Identifies missing points between sample and collected data — rmissing","text":"Identifies missing points sample collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rmissing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies missing points between sample and collected data — rmissing","text":"","code":"rmissing(sampdf, colldf, col_name)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rmissing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies missing points between sample and collected data — rmissing","text":"sampdf object containing data frame sample points colldf object containing data frame collected data col_name common variable (.e. key) data frames check missing points","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rmissing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies missing points between sample and collected data — rmissing","text":"Returns table sample points missing collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rmissing.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identifies missing points between sample and collected data — rmissing","text":"Simplified wrapper around dplyr::anti_join()","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rmissing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies missing points between sample and collected data — rmissing","text":"","code":"alsample <- rsamp(df=albania, 544) alreceived <- rsamp(df=alsample, 390) rmissing(sampdf=alsample, colldf=alreceived, col_name=qvKod) #>          qarku Q_ID        bashkia BAS_ID    zaz #> 1        Kukes    8        Tropoje     88  ZAZ 9 #> 2         Fier    5        Divjake     51 ZAZ 56 #> 3        Vlore   12         Himare    123 ZAZ 86 #> 4       Tirane   11         Tirane    111 ZAZ 37 #> 5        Vlore   12          Vlore    128 ZAZ 81 #> 6       Tirane   11         Tirane    111 ZAZ 34 #> 7        Berat    1         Kucove     13 ZAZ 63 #> 8        Lezhe    9          Lezhe     92 ZAZ 13 #> 9      Shkoder   10        Shkoder    105  ZAZ 2 #> 10       Kukes    8          Kukes     83 ZAZ 11 #> 11        Fier    5    Mallakaster     55 ZAZ 61 #> 12        Fier    5          Patos     56 ZAZ 59 #> 13       Lezhe    9        Mirdite     94 ZAZ 14 #> 14      Tirane   11         Tirane    111 ZAZ 33 #> 15      Tirane   11           Vore    119 ZAZ 26 #> 16     Elbasan    4        Elbasan     44 ZAZ 48 #> 17       Berat    1          Berat     11 ZAZ 64 #> 18     Shkoder   10 Malesi e Madhe    102  ZAZ 1 #> 19 Gjirokaster    6        Kelcyre     63 ZAZ 75 #> 20       Vlore   12         Himare    123 ZAZ 86 #> 21      Tirane   11         Tirane    111 ZAZ 30 #> 22     Elbasan    4        Elbasan     44 ZAZ 47 #>               njesiaAdministrative COM_ID   qvKod zgjedhes meshkuj femra #> 1                            Bytyc   8303  \"0469\"      298     154   144 #> 2                           Terbuf   5216  \"2845\"      893     473   420 #> 3                           Himare  12303  \"4587\"      715     354   361 #> 4  Tirane - Njesia Bashkiake Nr. 7  11215  \"1920\"      695     342   353 #> 5                         Shushice  12310  \"4547\"      647     324   323 #> 6  Tirane - Njesia Bashkiake Nr. 4  11215  \"1804\"      963     486   477 #> 7                          Perondi   1203  \"3508\"      503     259   244 #> 8                         Shenkoll   9208  \"0748\"      717     366   351 #> 9                        Rrethinat  10310  \"0114\"      712     373   339 #> 10                           Malzi   8208  \"0596\"      479     243   236 #> 11                        Aranitas   5301  \"3216\"      521     284   237 #> 12                           Patos   5110 \"30791\"      771     404   367 #> 13                           Rubik   9306  \"0885\"      409     205   204 #> 14 Tirane - Njesia Bashkiake Nr. 3  11215 \"17511\"      770     386   384 #> 15                            Vore  11217  \"1558\"      802     437   365 #> 16                         Elbasan   4104 \"23232\"      989     521   468 #> 17                          Berat    1101  \"3312\"      312     158   154 #> 18                          Shkrel  10106  \"0070\"      226     111   115 #> 19                            Suke   6209  \"4209\"      455     233   222 #> 20                   Hore Vranisht  12313  \"4594\"      241     128   113 #> 21                      Shengjergj  11214  \"1653\"      246     127   119 #> 22                   Labinot fushe   4114 \"24221\"      558     286   272 #>    totalSeats                                                     vendndodhja #> 1           3                                              Radogoshi, Shkolla #> 2          16                                           Cerme Sektor, Shkolla #> 3          12                               Vuno, Ambjent privat \"Meri Zisos\" #> 4          34                                            Shkolla \"Dhora Leka\" #> 5          12                                                 Risili, Shkolla #> 6          34                   Rruga \"Niko Avrami \", Shkolla \" Bajram Curri\" #> 7           7                                 Rreth Tapi, shkolla 9 - Vjecare #> 8           7                                       Gajush Qendra Shendetsore #> 9          11                                              Guci e Re, Shkolla #> 10          3                                   Kalimash, Shkolla 9 - Vjecare #> 11         16                                 Aranitas 1, Qendra Shendetesore #> 12         16                         Lagjia '29 Marsi', Shkolla 'Zhani Ciko' #> 13          7                                        Fang, Shkolla  9-Vjecare #> 14         34  Rruga \"Sitki cico\", Shkolla 9-vjecare \"Niket Dardani\"          #> 15         34                                                Marikaj, Shkolla #> 16         14                      Lagjia 5 Maji, Lokal Privat \"Sami Shabani\" #> 17          7                          Lagja  \"Clirim\",  Shkolla \"M.A.Virioni #> 18         11                                     Bzhete Makaj(XHAJ), Shkolla #> 19          5                                                   Suke, Shkolla #> 20         12                                             Kallarat, Ambulanca #> 21         34                                        Fag, shkolla 9 - Vjecare #> 22         14                                      Mengel, Shkolla 9 -Vjecare #>    ambienti totalVoters femVoters maleVoters unusedBallots damagedBallots #> 1    Publik         138        68         70           162              3 #> 2    Publik         364       149        215           542              4 #> 3    Privat         179        73        106           549              1 #> 4    Publik         381       174        207           325              2 #> 5    Publik         259       118        141           400              0 #> 6    Publik         398       183        215           579              5 #> 7    Publik         198        72        126           301              1 #> 8    Publik         294       138        156           437              0 #> 9    Publik         280       132        148           444              0 #> 10   Publik         255       110        145           232              1 #> 11   Publik         268       110        158           263              0 #> 12   Publik         349       160        189           437              0 #> 13   Publik         191        90        101             0              0 #> 14   Publik         386       177        209           399              0 #> 15   Publik         464        10        454           353              1 #> 16   Privat         498       232        266           509              1 #> 17   Publik         158        71         87           155              0 #> 18   Publik          89        38         51           140              1 #> 19   Publik         233       110        123           230              1 #> 20   Publik         135        60         75           109              1 #> 21   Publik         152        58         94            95              3 #> 22   Publik         358       154        204           209              2 #>    ballotsCast invalidVotes validVotes lsi  ps pkd sfida pr  pd pbdksh adk psd #> 1          138           16        122   4  67   0     0  1  50      0   0   0 #> 2          364            6        358  80 199   0     0  0  57      0   0   1 #> 3          179            2        177  17 144   0     0  0  15      0   0   0 #> 4          381            5        376  43 113   1     1  0 195      0   0   1 #> 5          259            2        257  22 199   0     0  0  26      0   0   1 #> 6          398            8        390  22 207   1     2  2 128      2   0   0 #> 7          198            4        194  58  91   0     0  0  43      1   0   1 #> 8          294            6        288  51  91   1     0  0 134      1   0   0 #> 9          280            7        273  19  95   1     0  1 131      2   0  21 #> 10         255            4        251  26 119   0     0  1 105      0   0   0 #> 11         268            4        264  47 150   0     0  0  53      0   0   0 #> 12         349            6        343  33 200   0     0  1  97      1   1   1 #> 13         191            3        188  16  88   0     0  0  79      0   0   0 #> 14         386           14        372  49 186   0     3  1  85      0   0   0 #> 15         464           10        454  93 194   2     0  2 144      0   0   9 #> 16         498           16        482  46 249   2     0  0  93      0   0   2 #> 17         158            3        155  33  89   0     0  0  25      0   0   0 #> 18          89            1         88   2  50   0     0  0  33      0   0   2 #> 19         233           12        221  74 115   1     0  1  24      0   1   0 #> 20         135            0        135  29  81   0     0  0  25      0   0   0 #> 21         152            4        148  11  57   1     0  0  76      1   0   0 #> 22         358            5        353  30 133   0     1  2 143      0   0   0 #>    ad frd pds pdiu aak mega pksh apd libra psSeats pdSeats lsiSeats pdiuSeats #> 1   0   0   0    0   0    0    0   0     0       1       2        0         0 #> 2   0   0   1   19   0    0    0   0     1      10       4        2         0 #> 3   0   0   0    0   0    0    0   0     1       8       3        1         0 #> 4   0   1   4    6   0    0    0   2     9      18      11        5         0 #> 5   0   0   0    3   0    0    0   5     1       8       3        1         0 #> 6   0   0   1   11   0    0    1   1    12      18      11        5         0 #> 7   0   0   0    0   0    0    0   0     0       4       1        2         0 #> 8   1   0   0    7   0    0    0   0     2       3       3        1         0 #> 9   0   0   0    3   0    0    0   0     0       4       5        1         0 #> 10  0   0   0    0   0    0    0   0     0       1       2        0         0 #> 11  0   0  11    1   0    0    0   0     2      10       4        2         0 #> 12  0   1   0    8   0    0    0   0     0      10       4        2         0 #> 13  0   0   0    5   0    0    0   0     0       3       3        1         0 #> 14  0   3   0   29   0    0    0   0    16      18      11        5         0 #> 15  0   0   0    3   0    0    0   0     7      18      11        5         0 #> 16  0   0   1   86   0    0    0   0     3       7       3        2         2 #> 17  0   0   1    5   0    0    0   0     2       4       1        2         0 #> 18  0   0   0    0   0    0    0   0     1       4       5        1         0 #> 19  0   0   0    0   0    0    0   0     5       3       1        1         0 #> 20  0   0   0    0   0    0    0   0     0       8       3        1         0 #> 21  0   0   0    1   0    0    0   0     1      18      11        5         0 #> 22  0   4   0   39   0    0    0   0     1       7       3        2         2 #>    psdSeats #> 1         0 #> 2         0 #> 3         0 #> 4         0 #> 5         0 #> 6         0 #> 7         0 #> 8         0 #> 9         1 #> 10        0 #> 11        0 #> 12        0 #> 13        0 #> 14        0 #> 15        0 #> 16        0 #> 17        0 #> 18        1 #> 19        0 #> 20        0 #> 21        0 #> 22        0 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 132 rows ]"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rpro.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate proportion and margin of error (simple random sample) — rpro","title":"Calculate proportion and margin of error (simple random sample) — rpro","text":"Calculate proportion margin error (simple random sample)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rpro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate proportion and margin of error (simple random sample) — rpro","text":"","code":"rpro(df, col_name, ci = 95, na = \"\", N = 0)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rpro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate proportion and margin of error (simple random sample) — rpro","text":"df object containing data frame perform analysis (e.g. data) col_name variable data frame want calculate proportion margin error ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) na (optional) value want filter exclude (defaults include everything) N (optional) population universe (e.g. 10000, nrow(df)); N value passed argument, margin error calculated using fpc","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rpro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate proportion and margin of error (simple random sample) — rpro","text":"Returns table responses (n), proportions, margins error, lower upper bounds factor given variable","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rpro.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate proportion and margin of error (simple random sample) — rpro","text":"[1] Sampling Design & Analysis, S. Lohr, 1999, Equation 2.15","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rpro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate proportion and margin of error (simple random sample) — rpro","text":"","code":"rpro(df=opening, col_name=openTime, ci=95, na=\"n/a\", N=5361) #>   openTime   n   midpoint        me       lower     upper #> 1     7_00 408 78.3109405 3.3628622 74.94807827 81.673803 #> 2    7-730  92 17.6583493 3.1114465 14.54690287 20.769796 #> 3    730-8  17  3.2629559 1.4497045  1.81325131  4.712660 #> 4    8-830   4  0.7677543 0.7122214  0.05553288  1.479976"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws simple random sample without replacement — rsamp","title":"Draws simple random sample without replacement — rsamp","text":"Draws simple random sample without replacement","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws simple random sample without replacement — rsamp","text":"","code":"rsamp(df, n, over = 0, rep = FALSE)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws simple random sample without replacement — rsamp","text":"df object containing full sampling data frame (e.g. data) n sample size (integer) object containing sample size (optional) desired oversampling proportion (defaults 0; takes value 0 1 input) rep (optional)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draws simple random sample without replacement — rsamp","text":"Returns simple random sample without replacement","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsamp.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Draws simple random sample without replacement — rsamp","text":"Simplified wrapper around dplyr::sample_n()","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsamp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draws simple random sample without replacement — rsamp","text":"","code":"rsamp(albania, n=360, over=0.1, rep=FALSE) #>          qarku Q_ID       bashkia BAS_ID    zaz            njesiaAdministrative #> 1       Durres    3         Kruje     33 ZAZ 20                     Fushe Kruje #> 2        Korce    7      Pogradec     75 ZAZ 67                        Pogradec #> 3       Tirane   11         Kamez    112 ZAZ 27                           Kamez #> 4      Elbasan    4         Belsh     41 ZAZ 45                           Belsh #> 5        Berat    1 Ura Vajgurore     19 ZAZ 62                   Ura Vajgurore #> 6      Elbasan    4       Elbasan     44 ZAZ 48                         Elbasan #> 7  Gjirokaster    6       Dropull     61 ZAZ 80                  Dropull posht. #> 8        Korce    7         Korce     73 ZAZ 72                           Korce #> 9      Shkoder   10       Shkoder    105  ZAZ 5                         Shkoder #> 10      Durres    3        Shijak     36 ZAZ 25                         Maminas #> 11       Vlore   12      Selenice    126 ZAZ 85                        Selenice #> 12        Fier    5         Fier      52 ZAZ 58                            Fier #> 13      Tirane   11        Tirane    111 ZAZ 38 Tirane - Njesia Bashkiake Nr. 8 #> 14      Tirane   11        Tirane    111 ZAZ 39 Tirane - Njesia Bashkiake Nr. 9 #> 15     Elbasan    4      Librazhd     48 ZAZ 52                       Hotolisht #> 16     Elbasan    4       Elbasan     44 ZAZ 50                         Elbasan #> 17     Shkoder   10       Shkoder    105  ZAZ 2                        Velipoje #> 18      Tirane   11        Tirane    111 ZAZ 35 Tirane - Njesia Bashkiake Nr. 5 #> 19       Diber    2         Diber     22 ZAZ 19                       Maqellare #> 20      Tirane   11        Tirane    111 ZAZ 35 Tirane - Njesia Bashkiake Nr. 5 #> 21      Tirane   11        Tirane    111 ZAZ 30                      Shengjergj #> 22       Vlore   12         Vlore    128 ZAZ 84                           Vlore #>    COM_ID   qvKod zgjedhes meshkuj femra totalSeats #> 1    3203  \"1298\"      989     509   480         14 #> 2    7405 \"38902\"      660     333   327         11 #> 3   11206  \"1568\"      636     308   328         34 #> 4    4101  \"2559\"      813     410   403         14 #> 5    1110 \"34861\"      579     293   286          7 #> 6    4104 \"23181\"      927     474   453         14 #> 7    6103  \"4272\"      603     298   305          5 #> 8    7303  \"3686\"      460     226   234         11 #> 9   10312 \"02711\"      494     239   255         11 #> 10   3105  \"1340\"      645     329   316         14 #> 11  12308  \"4526\"      957     481   476         12 #> 12   5103 \"30052\"      818     408   410         16 #> 13  11215  \"1938\"      579     278   301         34 #> 14  11215 \"19552\"      714     330   384         34 #> 15   4301 \"27611\"      313     163   150         14 #> 16   4104  \"2352\"      889     417   472         14 #> 17  10317  \"0329\"      452     228   224         11 #> 18  11215  \"1855\"      884     447   437         34 #> 19   2207  \"1111\"      473     240   233          6 #> 20  11215  \"1839\"      510     235   275         34 #> 21  11214  \"1653\"      246     127   119         34 #> 22  12312 \"44971\"      986     477   509         12 #>                                                vendndodhja ambienti totalVoters #> 1                               Lokal Privat, Albert Elezi   Privat         594 #> 2                                   Qendra Speciale Ditore   Publik         293 #> 3  Rruga \"Bulevardi Blu\" nr.165, Gjimnazi \"Ibrahim Rugova\"   Publik         312 #> 4                            Qafshkalle, Shkolla 9-vjecare   Publik         370 #> 5                         Shkolla e mesme \"Muhamer Janina\"   Publik         258 #> 6                     Lagjia \"5 Maj\", Shkolla \"Mahir Domi\"   Publik         454 #> 7                                  Grapsh, Shkolla fillore   Publik         163 #> 8                                       L 8 Sh. N Frasheri   Publik         151 #> 9               Lagjia \"D. Matlia\", Shkolla \"D Prishtines\"   Publik         207 #> 10                                  Vlashaj,Ambulanca e re   Publik         361 #> 11                          Shkolla 9 -Vjecare \" T.Koceli\"   Publik         238 #> 12           Apollonia, Shkolla \"Janaq Kilica\",godina e re   Publik         354 #> 13                          CEZ Shperndarje sh.a. Kodi 061   Publik         295 #> 14                                     Kopshti \"Mine Peza\"   Publik         334 #> 15                     Hotolisht qender, shkolla 9-vjecare   Publik         196 #> 16           Lagjia  \"L.Gurakuqi\"  Kopshti \"Fetah Ekmeciu\"   Publik         385 #> 17                                          Luarz, Shkolla   Publik         186 #> 18            rruga \"Vangjel Koca\", Shkolla \"Murat Toptani   Publik         486 #> 19                           Pocest 1, Shkolla 9 - Vjecare   Publik         235 #> 20             Blv.\" Bajram Curri\", Shkolla \"Vasil Shanto\"   Publik         230 #> 21                                Fag, shkolla 9 - Vjecare   Publik         152 #> 22                   Shkolla e mesme Industriale - kati II   Publik         363 #>    femVoters maleVoters unusedBallots damagedBallots ballotsCast invalidVotes #> 1        278        316           212              1         594           17 #> 2        142        151           380              0         293            2 #> 3        155        157           306              0         312            3 #> 4        200        170           459              0         370            9 #> 5        122        136           331              1         258            3 #> 6        223        231           489              1         454            9 #> 7         67         96           450              2         163            1 #> 8         70         81           318              0         151            4 #> 9         99        108           292              1         207            1 #> 10       184        177           295              0         361            4 #> 11       111        127           738              1         238            6 #> 12         0        354           480              0         354            8 #> 13       146        149           295              0         295            4 #> 14       167        167           392              2         334            5 #> 15       101         95             0              0         196            1 #> 16       124        261           515              0         385            9 #> 17        52        134           266              0         186            1 #> 18       224        262           413              1         486           11 #> 19         0        235           247              1         235            6 #> 20       119        111           280             10         230            2 #> 21        58         94            95              3         152            4 #> 22       150        213           642              0         363            4 #>    validVotes lsi  ps pkd sfida pr  pd pbdksh adk psd ad frd pds pdiu aak mega #> 1         577  23 317   2     0  2 210      0   1  11  0   1   1    6   0    0 #> 2         291  34 175   0     0  1  66      0   0   0  0   1   5    0   1    0 #> 3         309  43 132   0     0  0 124      0   0   0  0   0   0    2   0    0 #> 4         361 112 199   0     0  0  44      1   0   0  1   1   0    3   0    0 #> 5         255  35 171   0     0  0  32      0   0   0  0   7   0    0   0    0 #> 6         445  55 155   0     0  0  90      0   0   0  0   4   3  134   0    0 #> 7         162  78  37   0     0  2  43      0   1   0  1   0   0    0   0    0 #> 8         147  18  60   1     0  0  64      0   0   0  0   0   0    2   0    0 #> 9         206  29  77   1     0  1  83      0   0   6  0   0   0    5   0    0 #> 10        357  66 237   0     0  0  52      0   0   0  0   0   0    1   0    0 #> 11        232  10 152   0     0  1  65      0   2   0  0   0   0    1   0    0 #> 12        346  34 202   0     2  1  79      0   0   0  0   0   0   14   0    0 #> 13        291  28 148   0     2  1  92      0   0   0  0   2   0    7   0    0 #> 14        329  29 193   0     5  1  71      0   0   2  0   1   0   13   0    0 #> 15        195  10 133   0     0  0  44      0   0   0  0   0   0    8   0    0 #> 16        376  17 157   0     1  0 122      0   0   1  0   4   0   64   0    0 #> 17        185  15  78   0     0  0  77      0   0  14  0   0   0    0   0    0 #> 18        475  37 279   0     1  1 133      0   0   1  0   1   2    9   0    0 #> 19        229  23  85   0     0  1  91      0   0   0  0   0   0   29   0    0 #> 20        228  20 141   0     3  0  41      0   0   0  0   0   0   10   1    0 #> 21        148  11  57   1     0  0  76      1   0   0  0   0   0    1   0    0 #> 22        359  21 217   0     1  0  82      0   0   0  0   5   0   31   0    0 #>    pksh apd libra psSeats pdSeats lsiSeats pdiuSeats psdSeats #> 1     0   1     2       8       4        2         0        0 #> 2     2   0     6       6       4        1         0        0 #> 3     0   3     5      18      11        5         0        0 #> 4     0   0     0       7       3        2         2        0 #> 5     1   0     9       4       1        2         0        0 #> 6     0   0     4       7       3        2         2        0 #> 7     0   0     0       3       1        1         0        0 #> 8     0   0     2       6       4        1         0        0 #> 9     0   0     4       4       5        1         0        1 #> 10    0   0     1       8       4        2         0        0 #> 11    0   0     1       8       3        1         0        0 #> 12    0   0    14      10       4        2         0        0 #> 13    0   0    11      18      11        5         0        0 #> 14    0   0    14      18      11        5         0        0 #> 15    0   0     0       7       3        2         2        0 #> 16    1   4     5       7       3        2         2        0 #> 17    0   0     1       4       5        1         0        1 #> 18    1   0    10      18      11        5         0        0 #> 19    0   0     0       2       2        1         1        0 #> 20    0   6     6      18      11        5         0        0 #> 21    0   0     1      18      11        5         0        0 #> 22    0   0     2       8       3        1         0        0 #>  [ reached 'max' / getOption(\"max.print\") -- omitted 374 rows ]  size <- rsampcalc(nrow(albania), 3, 95, 0.5) randomsample <- rsamp(albania, size)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsampcalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines random sample size — rsampcalc","title":"Determines random sample size — rsampcalc","text":"Determines random sample size","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsampcalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines random sample size — rsampcalc","text":"","code":"rsampcalc(N, e, ci = 95, p = 0.5, over = 0)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsampcalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines random sample size — rsampcalc","text":"N population universe (e.g. 10000, nrow(df)) e tolerable margin error (integer float, e.g. 5, 2.5) ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) p (optional) anticipated response distribution (defaults 0.5; takes value 0 1 input) (optional) desired oversampling proportion (defaults 0; takes value 0 1 input)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsampcalc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines random sample size — rsampcalc","text":"Returns appropriate sample size (rounded nearest integer)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsampcalc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determines random sample size — rsampcalc","text":"[1] Sampling Design & Analysis, S. Lohr, 1999, equation 2.17","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/rsampcalc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determines random sample size — rsampcalc","text":"","code":"rsampcalc(N=5361, e=3, ci=95, p=0.5, over=0.1) #> [1] 979  rsampcalc(nrow(data), 3) #> numeric(0)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/smissing.html","id":null,"dir":"Reference","previous_headings":"","what":"Identifies number of missing points by strata between sample and collected data — smissing","title":"Identifies number of missing points by strata between sample and collected data — smissing","text":"Identifies number missing points strata sample collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/smissing.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Identifies number of missing points by strata between sample and collected data — smissing","text":"","code":"smissing(sampdf, colldf, strata, col_name)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/smissing.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Identifies number of missing points by strata between sample and collected data — smissing","text":"sampdf object containing data frame sample points colldf object containing data frame collected data strata variable data frames stratify col_name common variable (.e. key) data frames check missing points","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/smissing.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Identifies number of missing points by strata between sample and collected data — smissing","text":"Returns table number sample points strata missing collected data","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/smissing.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Identifies number of missing points by strata between sample and collected data — smissing","text":"Simplified wrapper around dplyr::anti_join()","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/smissing.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Identifies number of missing points by strata between sample and collected data — smissing","text":"","code":"alsample <- rsamp(df=albania, 544) alreceived <- rsamp(df=alsample, 390) smissing(sampdf=alsample, colldf=alreceived, strata=qarku, col_name=qvKod) #>          qarku received missing pctreceived pctmissing #> 1        Berat       22       6    78.57143   21.42857 #> 2        Diber       19       6    76.00000   24.00000 #> 3       Durres       34      13    72.34043   27.65957 #> 4      Elbasan       39      15    72.22222   27.77778 #> 5         Fier       46      18    71.87500   28.12500 #> 6  Gjirokaster       17       4    80.95238   19.04762 #> 7        Korce       35      16    68.62745   31.37255 #> 8        Kukes        8      10    44.44444   55.55556 #> 9        Lezhe       15       6    71.42857   28.57143 #> 10     Shkoder       32      13    71.11111   28.88889 #> 11      Tirane       95      31    75.39683   24.60317 #> 12       Vlore       28      16    63.63636   36.36364"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/spro.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate proportion and margin of error (stratified sample) — spro","title":"Calculate proportion and margin of error (stratified sample) — spro","text":"Calculate proportion margin error (stratified sample)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/spro.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate proportion and margin of error (stratified sample) — spro","text":"","code":"spro(fulldf, sampdf, strata, col_name, ci = 95, na = \"\")"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/spro.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate proportion and margin of error (stratified sample) — spro","text":"fulldf object containing original data frame used draw sample sampdf object containing data frame perform analysis strata variable data frames stratify col_name variable data frame want calculate proportion margin error ci (optional) confidence level establishing confidence interval using z-score (defaults 95; restricted 80, 85, 90, 95 99 input) na (optional) value want filter exclude (defaults include everything)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/spro.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate proportion and margin of error (stratified sample) — spro","text":"Returns table responses (n), proportions, margins error, lower upper bounds factor given variable stratified sample","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/spro.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Calculate proportion and margin of error (stratified sample) — spro","text":"[1] Sampling Design & Analysis, S. Lohr, 1999, 4.6 & 4.7","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/spro.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate proportion and margin of error (stratified sample) — spro","text":"","code":"spro(fulldf=albania, sampdf=opening, strata=qarku, col_name=openTime, ci=95, na=\"n/a\") #>   openTime   n   midpoint        me       lower     upper #> 1     7_00 408 78.3676959 3.3312036 75.03649228 81.698900 #> 2    7-730  92 17.6001119 3.0807742 14.51933775 20.680886 #> 3    730-8  17  3.2674097 1.4554306  1.81197911  4.722840 #> 4    8-830   4  0.7647825 0.7085333  0.05624911  1.473316"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssamp.html","id":null,"dir":"Reference","previous_headings":"","what":"Draws stratifed sample without replacement using proportional allocation — ssamp","title":"Draws stratifed sample without replacement using proportional allocation — ssamp","text":"Draws stratifed sample without replacement using proportional allocation","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssamp.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Draws stratifed sample without replacement using proportional allocation — ssamp","text":"","code":"ssamp(df, n, strata, over = 1)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssamp.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Draws stratifed sample without replacement using proportional allocation — ssamp","text":"df object containing full sampling data frame (e.g. data) n sample size (integer) object containing sample size strata variable sampling data frame stratify (e.g. region) (optional) desired oversampling proportion (defaults 0; takes value 0 1 input)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssamp.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Draws stratifed sample without replacement using proportional allocation — ssamp","text":"Returns stratified sample without replacement","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssamp.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Draws stratifed sample without replacement using proportional allocation — ssamp","text":"","code":"ssamp(df=albania, n=360, strata=qarku, over=0.1) #> # A tibble: 395 × 45 #>    qarku  Q_ID bashkia       BAS_ID zaz   njesiaAdministr… COM_ID qvKod zgjedhes #>    <fct> <int> <fct>          <int> <fct> <fct>             <int> <fct>    <int> #>  1 Berat     1 Polican           15 ZAZ … \"Vertop\"           1112 \"\\\"3…      593 #>  2 Berat     1 Berat             11 ZAZ … \"Roshnik\"          1107 \"\\\"3…      783 #>  3 Berat     1 Berat             11 ZAZ … \"Velabisht\"        1111 \"\\\"3…      667 #>  4 Berat     1 Berat             11 ZAZ … \"Roshnik\"          1107 \"\\\"3…      303 #>  5 Berat     1 Skrapar           17 ZAZ … \"Qender - SKRAP…   1308 \"\\\"3…      409 #>  6 Berat     1 Kucove            13 ZAZ … \"Kozare\"           1202 \"\\\"3…      539 #>  7 Berat     1 Ura Vajgurore     19 ZAZ … \"Poshnje\"          1106 \"\\\"3…      658 #>  8 Berat     1 Berat             11 ZAZ … \"Berat \"           1101 \"\\\"3…      696 #>  9 Berat     1 Kucove            13 ZAZ … \"Perondi\"          1203 \"\\\"3…      494 #> 10 Berat     1 Ura Vajgurore     19 ZAZ … \"Poshnje\"          1106 \"\\\"3…      592 #> # … with 385 more rows, and 36 more variables: meshkuj <int>, femra <int>, #> #   totalSeats <int>, vendndodhja <fct>, ambienti <fct>, totalVoters <int>, #> #   femVoters <int>, maleVoters <int>, unusedBallots <int>, #> #   damagedBallots <int>, ballotsCast <int>, invalidVotes <int>, #> #   validVotes <int>, lsi <int>, ps <int>, pkd <int>, sfida <int>, pr <int>, #> #   pd <int>, pbdksh <int>, adk <int>, psd <int>, ad <int>, frd <int>, #> #   pds <int>, pdiu <int>, aak <int>, mega <int>, pksh <int>, apd <int>, …  size <- rsampcalc(nrow(albania), 3, 95, 0.5) stratifiedsample <- ssamp(albania, size, qarku)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssampcalc.html","id":null,"dir":"Reference","previous_headings":"","what":"Determines sample size by strata using proportional allocation — ssampcalc","title":"Determines sample size by strata using proportional allocation — ssampcalc","text":"Determines sample size strata using proportional allocation","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssampcalc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Determines sample size by strata using proportional allocation — ssampcalc","text":"","code":"ssampcalc(df, n, strata, over = 0)"},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssampcalc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Determines sample size by strata using proportional allocation — ssampcalc","text":"df object containing sampling data frame (e.g. data) n sample size (integer) object containing sample size strata variable sampling data frame stratify (e.g. region) (optional) desired oversampling proportion (defaults 0; takes value 0 1 input)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssampcalc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Determines sample size by strata using proportional allocation — ssampcalc","text":"Returns proportional sample size per strata (rounded nearest integer)","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssampcalc.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Determines sample size by strata using proportional allocation — ssampcalc","text":"[1] Sampling Design & Analysis, S. Lohr, 1999, 4.4","code":""},{"path":"https://jhu-statprogramming-fall-2022.github.io/biostat840-project3-pkgdown-peterliu599/reference/ssampcalc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Determines sample size by strata using proportional allocation — ssampcalc","text":"","code":"ssampcalc(df=albania, n=544, strata=qarku, over=0.05) #> # A tibble: 12 × 4 #>    qarku          Nh wt[,1] nh[,1] #>    <fct>       <int>  <dbl>  <dbl> #>  1 Berat         305 0.0569     33 #>  2 Diber         259 0.0483     28 #>  3 Durres        460 0.0858     49 #>  4 Elbasan       547 0.102      58 #>  5 Fier          591 0.110      63 #>  6 Gjirokaster   235 0.0438     25 #>  7 Korce         463 0.0863     49 #>  8 Kukes         173 0.0323     18 #>  9 Lezhe         263 0.0490     28 #> 10 Shkoder       421 0.0785     45 #> 11 Tirane       1198 0.223     128 #> 12 Vlore         447 0.0834     48  size <- rsampcalc(nrow(albania), 3, 95, 0.5) ssampcalc(albania, size, qarku) #> # A tibble: 12 × 4 #>    qarku          Nh wt[,1] nh[,1] #>    <fct>       <int>  <dbl>  <dbl> #>  1 Berat         305 0.0569     51 #>  2 Diber         259 0.0483     43 #>  3 Durres        460 0.0858     76 #>  4 Elbasan       547 0.102      91 #>  5 Fier          591 0.110      98 #>  6 Gjirokaster   235 0.0438     39 #>  7 Korce         463 0.0863     77 #>  8 Kukes         173 0.0323     29 #>  9 Lezhe         263 0.0490     44 #> 10 Shkoder       421 0.0785     70 #> 11 Tirane       1198 0.223     199 #> 12 Vlore         447 0.0834     74"}]
